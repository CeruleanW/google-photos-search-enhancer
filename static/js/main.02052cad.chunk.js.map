{"version":3,"sources":["components/Context/AccessContext.js","components/Context/FeedbackContext.js","components/Footer.jsx","components/Context/UrlsContext.js","components/Title.js","components/lib/indexedDBController.js","components/lib/GapiConnection.js","components/GoogleBtn.jsx","components/SearchBar.jsx","components/HelpModal.jsx","components/MyDialog.jsx","components/MyAppBar.jsx","components/lib/processor.js","components/Photos.jsx","components/Backdrop.jsx","images/icons8-search-500.png","components/NoMatchedSnackbar.jsx","components/Main.jsx","components/App.js","serviceWorker.js","index.js"],"names":["AccessContext","React","createContext","AccessUpdateContext","useAccess","useContext","useAccessUpdate","AccessProvider","children","useState","accessToken","setAccessToken","isLogined","setIsLogined","Provider","value","handleAccessToken","token","handleIsLogined","logined","FeedbackContext","FeedbackUpdateContext","useFeedback","useFeedbackUpdate","FeedbackProvider","isBackdropOpened","setisBackdropOpened","textMessage","setTextMessage","isSearching","setIsSearching","isNoMatch","setIsNoMatch","handleBackdrop","handleTextMessage","text","handleIsSearching","isSearch","handleIsNoMatch","useStyles","makeStyles","footerLink","color","Footer","classes","bottomThreshold","normalStyles","backgroundColor","padding","font","stickyStyles","Container","Typography","align","className","href","PhotoUrlContext","PhotoUrlUpdateContext","useUrl","useUrlUpdate","UrlsProvider","photoUrls","setPhotoUrls","searchedIds","setSearchedIds","handlePhotoUrls","handleSearchedIds","ids","theme","menuButton","marginRight","spacing","hide","display","title","breakpoints","down","fontSize","up","Title","setIsDrawerOpen","clsx","isDrawerOpen","IconButton","aria-label","onClick","edge","variant","dbPromise","openDB","upgrade","db","createObjectStore","keyPath","autoIncrement","setTimeStamp","createDatabase","isUpdated","localStorage","setItem","Date","getTimeStamp","getItem","storeMediaItems","mediaItems","a","tx","transaction","forEach","Promise","resolve","reject","store","put","catch","error","console","log","clear","keyword","t0","performance","now","getAll","request","options","includeScore","keys","fuse","Fuse","result","search","t1","signal","AbortController","createBaseInit","myHeaders","Object","assign","Authorization","headers","mode","createInit","pageToken","httpMethod","filters","includeArchivedMedia","pageSize","init","body","JSON","stringify","method","createRequest","apiURL","queryStrings","url","objectToQueryString","createRequestForSingleItem","obj","map","key","join","requestAllMediaItems","requestAPageOfMediaItems","onePageData","storedData","filterResponseData","nextToken","nextPageToken","name","message","access_token","p","fetch","then","response","json","urls","id","requests","fetches","fulfilled","all","fulfilleds","baseUrl","productUrl","responseJson","mediaItem","filename","description","oauth2","clientID","credentials","client_id","projectId","authUri","tokenUri","scopes","GoogleBtn","props","updateAccessToken","updateBackdrop","updateTextMessage","updateIsLogined","handleRequest","window","gapi","auth2","getAuthInstance","setUpdateTime","onSetLastUpdateTime","finally","Fragment","clientId","onLogoutSuccess","buttonText","onFailure","alert","render","renderProps","Button","disabled","cookiePolicy","onSuccess","responseType","scope","isSignedIn","position","borderRadius","shape","fade","palette","common","white","marginLeft","marginBottom","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","updatePhotoUrls","updateIsSearching","updateSearchedIds","updateIsNoMatch","setKeyword","handleSearch","searchForItems","data","item","length","requestForSingleItem","rejected","Grid","xs","InputBase","placeholder","root","input","inputProps","onChange","event","target","onKeyUp","keyCode","preventDefault","autoFocus","margin","marginTop","maxWidth","firstPara","footNote","HelpModal","BodyPara","Modal","open","onClose","Box","Divider","MyDialog","handleIsAgreed","bool","onAgreed","Dialog","aria-describedby","DialogContent","DialogContentText","DialogActions","MyAppBar","justifyStyle","drawerWidth","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","offset","useTheme","useMediaQuery","updateFeedback","lastUpdateTime","setLastUpdateTime","isSnackbarOpen","setIsSnackbarOpen","snackPack","setSnackPack","messageInfo","setMessageInfo","undefined","severity","setSeverity","isHelpModalOpen","setIsHelpModalOpen","openUpdateAlertDialog","setOpenUpdateAlertDialog","isUpdateRequestAgreed","setIsUpdateRequestAgreed","useEffect","prev","slice","addSnackPack","noFirstVisit","handleSnackbarClose","sever","getTime","AppBar","Toolbar","container","justify","lg","md","Drawer","anchor","paper","direction","List","ListItem","button","ListItemText","primary","clearData","gutterBottom","date","d","addZero","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDate","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","isAgreed","flexWrap","overflow","gridListTile","maxHeight","image","opacity","masonryGrid","masonryGridColumn","backgroundClip","Photos","loadingPhotos","setLoadingPhotos","timer","setTimeout","clearTimeout","sm","xl","Skeleton","breakpointCols","default","1920","1280","960","600","columnClassName","index","src","alt","backdrop","zIndex","leftPadding","SimpleBackdrop","Backdrop","CircularProgress","NoMatchedSnackbar","handleClose","reason","Alert","main","minHeight","centerText","textDecoration","fontWeight","fontFamily","centerLayout","top","transform","CenterBackground","icon","Main","LinearProgress","App","CssBaseline","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.02052cad.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nconst AccessContext = React.createContext();\r\nconst AccessUpdateContext = React.createContext();\r\n\r\nexport function useAccess() {\r\n  return useContext(AccessContext);\r\n}\r\n\r\nexport function useAccessUpdate() {\r\n  return useContext(AccessUpdateContext);\r\n}\r\n\r\nexport default function AccessProvider( {children} ) {\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [isLogined, setIsLogined] = useState(false);\r\n\r\n  function handleAccessToken(token) {\r\n    setAccessToken(token);\r\n  }\r\n\r\n  function handleIsLogined(logined) {\r\n    setIsLogined(logined);\r\n  }\r\n\r\n  return (\r\n    <AccessContext.Provider value={{accessToken, isLogined}}>\r\n      <AccessUpdateContext.Provider value={{handleAccessToken, handleIsLogined}}>\r\n      {children}\r\n      </AccessUpdateContext.Provider>\r\n    </AccessContext.Provider>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst FeedbackContext = React.createContext();\r\nconst FeedbackUpdateContext = React.createContext();\r\n\r\nexport function useFeedback() {\r\n  return useContext(FeedbackContext);\r\n}\r\n\r\nexport function useFeedbackUpdate() {\r\n  return useContext(FeedbackUpdateContext);\r\n}\r\n\r\nexport default function FeedbackProvider( {children} ) {\r\n  const [isBackdropOpened, setisBackdropOpened] = useState(false);\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isNoMatch, setIsNoMatch] = useState(false);\r\n\r\n  function handleBackdrop(isBackdropOpened) {\r\n    setisBackdropOpened(isBackdropOpened);\r\n  }\r\n\r\n  function handleTextMessage(text) {\r\n    setTextMessage(text);\r\n  }\r\n\r\n  function handleIsSearching(isSearch) {\r\n    setIsSearching(isSearch);\r\n  }\r\n\r\n  function handleIsNoMatch(isNoMatch) {\r\n    setIsNoMatch(isNoMatch);\r\n  }\r\n\r\n  return (\r\n    <FeedbackContext.Provider value={{isBackdropOpened, textMessage, isSearching, isNoMatch}}>\r\n      <FeedbackUpdateContext.Provider value={{handleBackdrop, handleTextMessage, handleIsSearching, handleIsNoMatch}}>\r\n      {children}\r\n      </FeedbackUpdateContext.Provider>\r\n    </FeedbackContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport StickyFooter from 'react-sticky-footer'; // Library Link: https://www.npmjs.com/package/react-sticky-footer\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  footerLink: {\r\n    '&:visited': {\r\n      color: 'blueviolet'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Footer() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n    <StickyFooter\r\n    bottomThreshold={50}\r\n    // stickAtThreshold={0}\r\n      normalStyles={{\r\n        backgroundColor: '#1b2024',\r\n        padding: '1rem',\r\n        color: 'rgb(192 192 192)',\r\n        font: \"300 0.9rem 'Lora', serif\",\r\n      }}\r\n      stickyStyles={{\r\n        backgroundColor: 'rgba(255,255,255,.8)',\r\n        padding: '1rem',\r\n        font: \"300 1rem 'Lora', serif\",\r\n\t\t\t}}\r\n    >\r\n      <Container>\r\n        <Typography align='center' >\r\n          {' '}\r\n          Copyright &copy; 2020 Developed with ❤️ by\r\n          <a className={classes.footerLink}\r\n            href='https://github.com/CeruleanW'\r\n          >\r\n            {' '}\r\n            Yi Yang\r\n          </a>\r\n        </Typography>\r\n      </Container>\r\n    </StickyFooter>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst PhotoUrlContext = React.createContext();\r\nconst PhotoUrlUpdateContext = React.createContext();\r\n\r\nexport function useUrl() {\r\n  return useContext(PhotoUrlContext);\r\n}\r\n\r\nexport function useUrlUpdate() {\r\n  return useContext(PhotoUrlUpdateContext);\r\n}\r\n\r\nexport default function UrlsProvider( {children} ) {\r\n  const [photoUrls, setPhotoUrls] = useState([]);\r\n  const [searchedIds, setSearchedIds] = useState([]);\r\n\r\n  function handleSearchedIds(ids) {\r\n    setSearchedIds(ids);\r\n  }\r\n\r\n  function handlePhotoUrls(photoUrls) {\r\n    setPhotoUrls(photoUrls);\r\n  }\r\n\r\n  return (\r\n    <PhotoUrlContext.Provider value={{photoUrls, searchedIds}}>\r\n      <PhotoUrlUpdateContext.Provider value={{handlePhotoUrls, handleSearchedIds}}>\r\n      {children}\r\n      </PhotoUrlUpdateContext.Provider>\r\n    </PhotoUrlContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  title: {\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1rem',\n    },\n    [theme.breakpoints.up('lg')]: {\n      fontSize: '1.2rem',\n    },\n  }\n}));\n\nexport function Title({ setIsDrawerOpen, clsx, isDrawerOpen }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <IconButton\n        color='inherit'\n        aria-label='open drawer'\n        onClick={() => setIsDrawerOpen(true)}\n        edge='start'\n        className={clsx(classes.menuButton, isDrawerOpen && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant='h6' className={classes.title}>\n        Google Photos Search Enhancer\n      </Typography>\n    </>\n  );\n}\n","import { openDB } from 'idb';\r\nimport Fuse from 'fuse.js';\r\n\r\nlet dbPromise = createDatabase();\r\n\r\nexport function checkNotFirstVisit() {\r\n  if (!localStorage.noFirstVisit) {\r\n    console.log('first time');\r\n    localStorage.noFirstVisit = '1';\r\n    return false;\r\n  }\r\n  return localStorage.noFirstVisit;\r\n}\r\n\r\nexport function setTimeStamp(isUpdated = true) {\r\n  if (isUpdated) {\r\n    localStorage.setItem('updateTime', new Date());\r\n  } else {\r\n    localStorage.setItem('updateTime', '');\r\n  }\r\n}\r\n\r\n// return a date object or a empty string\r\nexport function getTimeStamp() {\r\n  return localStorage.getItem('updateTime');\r\n}\r\n\r\n// Create a database with a 'localMediaItems' object store\r\nexport function createDatabase() {\r\n  const dbPromise = openDB('db', 1, {\r\n    upgrade(db) {\r\n      db.createObjectStore('localMediaItems', {\r\n        keyPath: 'id',\r\n        autoIncrement: true,\r\n      });\r\n    },\r\n  });\r\n  setTimeStamp();\r\n\r\n  return dbPromise;\r\n}\r\n\r\n// store an array\r\nexport async function storeMediaItems(mediaItems) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction('localMediaItems', 'readwrite');\r\n  mediaItems.forEach((value) => {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(tx.store.put(value));\r\n    }).catch((error) => {\r\n      console.log('Error: failed to store data in IndexedDB' + error);\r\n    });\r\n  });\r\n}\r\n\r\nexport async function clearData() {\r\n  const db = await dbPromise;\r\n  return db.clear('localMediaItems');\r\n}\r\n\r\n// search a keyword and return an array of matched Ids(keys)\r\nexport async function search(keyword) {\r\n  console.log('Keyword:' + keyword);\r\n  const t0 = performance.now();\r\n\r\n  // request data from IndexedDB\r\n  const db = await dbPromise;\r\n  let store = db.transaction('localMediaItems').store;\r\n  let cursor = await store.openCursor();\r\n  // let result = [];\r\n\r\n  const t1 = performance.now();\r\n  console.log(`search function took ${t1 - t0} milliseconds.`);\r\n  \r\n  // perform the search\r\n\r\n  const options = {\r\n    includeScore: true,\r\n    // Search in `author` and in `tags` array\r\n    keys: ['author', 'tags']\r\n  }\r\n  \r\n  const fuse = new Fuse(cursor, options)\r\n  \r\n  const result = fuse.search('tion');\r\n  // loop through each media items\r\n  // while (cursor) {\r\n  //   let des = cursor.value.description;\r\n  //   let fileName = cursor.value.filename;\r\n  //   if (fileName && fileName.includes(keyword)) {\r\n  //     result.push(cursor.key);\r\n  //   } else if (des && des.includes(keyword)) {\r\n  //     result.push(cursor.key);\r\n  //   }\r\n  //   cursor = await cursor.continue();\r\n  // }\r\n\r\n  return result;\r\n}\r\n\r\n\r\nexport async function searchForItems(keyword) {\r\n  console.log('Keyword:' + keyword);\r\n  const t0 = performance.now();\r\n\r\n  // request data from IndexedDB\r\n  const db = await dbPromise;\r\n  const request = await db.getAll('localMediaItems'); // an array of all data objects\r\n\r\n  // execute the search\r\n  const options = {\r\n    includeScore: true,\r\n    keys: ['filename', 'description']\r\n  }\r\n  const fuse = new Fuse(request, options)\r\n  const result = fuse.search(keyword);\r\n  // console.log('results: ' + JSON.stringify(result));\r\n\r\n  const t1 = performance.now();\r\n  console.log(`search function took ${t1 - t0} milliseconds.`);\r\n  \r\n  return result;\r\n}","/* global gapi */\r\nimport {\r\n  storeMediaItems,\r\n  setTimeStamp,\r\n  getTimeStamp,\r\n} from \"./indexedDBController\";\r\n\r\nexport const controller = new AbortController();\r\nconst signal = controller.signal;\r\n\r\nconst createBaseInit = (accessToken) => {\r\n  let myHeaders = {};\r\n  Object.assign(myHeaders, { \"Content-Type\": \"application/json\" });\r\n  Object.assign(myHeaders, { Authorization: `Bearer ${accessToken}` });\r\n\r\n  const baseInit = {\r\n    headers: myHeaders,\r\n    mode: \"cors\",\r\n    signal,\r\n  };\r\n\r\n  return baseInit;\r\n};\r\n\r\n// return an init object for Fetch\r\nconst createInit = (\r\n  accessToken,\r\n  pageToken,\r\n  httpMethod = \"POST\",\r\n  filters = { includeArchivedMedia: true },\r\n  pageSize = 100\r\n) => {\r\n  let init = createBaseInit(accessToken);\r\n\r\n  // create body\r\n  let body = {\r\n    filters,\r\n    pageSize,\r\n  };\r\n  if (pageToken) {\r\n    Object.assign(body, { pageToken: pageToken });\r\n  }\r\n  body = JSON.stringify(body);\r\n\r\n  //assign body\r\n  Object.assign(init, { method: httpMethod, mode: \"cors\", body });\r\n\r\n  return init;\r\n};\r\n\r\nconst createRequest = (\r\n  apiURL = \"https://photoslibrary.googleapis.com/v1/mediaItems\",\r\n  queryStrings\r\n) => {\r\n  let url = apiURL;\r\n  if (queryStrings) {\r\n    url += \"?\" + objectToQueryString(queryStrings);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst createRequestForSingleItem = (url, accessToken) => {\r\n  return `${url}?access_token=${accessToken}`;\r\n};\r\n\r\nconst objectToQueryString = (obj) => {\r\n  return Object.keys(obj)\r\n    .map((key) => key + \"=\" + obj[key])\r\n    .join(\"&\");\r\n};\r\n\r\n// request for all media items and store the result in the IndexedDB\r\n// return the setted time stamp\r\n// Default: include archived items\r\nexport async function requestAllMediaItems(\r\n  accessToken,\r\n  url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n  httpMethod = \"POST\"\r\n) {\r\n  let nextToken;\r\n  try {\r\n    // fetch a page of data from Google API\r\n    let onePageData = await requestAPageOfMediaItems(\r\n      accessToken,\r\n      false,\r\n      url,\r\n      httpMethod\r\n    );\r\n\r\n    do {\r\n      //store data from response\r\n      const storedData = filterResponseData(onePageData);\r\n      if (storedData) {\r\n        storeMediaItems(storedData);\r\n      }\r\n\r\n      // use the nextPageToken to get the data in the next page\r\n      nextToken = onePageData.nextPageToken;\r\n      onePageData = await requestAPageOfMediaItems(\r\n        accessToken,\r\n        nextToken,\r\n        url,\r\n        httpMethod\r\n      );\r\n    } while (nextToken);\r\n  } catch (err) {\r\n    console.log(err.name + \": \" + err.message);\r\n  }\r\n\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise wrapping the response JSON\r\nasync function requestAPageOfMediaItems(\r\n  accessToken,\r\n  pageToken = \"\",\r\n  url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n  method = \"POST\"\r\n) {\r\n  const queryStrings = { access_token: accessToken };\r\n  const request = createRequest(url, queryStrings);\r\n  const options = createInit(accessToken, pageToken, method);\r\n  // const request = \"https://photoslibrary.googleapis.com/v1/mediaItems\";\r\n\r\n  const p = fetch(request, options)\r\n    .then((response) => {\r\n      const json = response.json();\r\n      // console.log(\"Fetching: \" + json);\r\n      return json;\r\n    })\r\n    .catch((error) => console.error(error));\r\n\r\n  return p;\r\n}\r\n\r\nexport async function setUpdateTime() {\r\n  // get items that not exists in IndexedDB\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise with the fulfilled value\r\n// the value is an array of object, which has 2 property: baseUrl & productUrl\r\nexport async function requestForSingleItem(ids, accessToken) {\r\n  // set a list of requests\r\n  const urls = ids.map(\r\n    (id) => `https://photoslibrary.googleapis.com/v1/mediaItems/${id}`\r\n  );\r\n  const requests = urls.map((url) =>\r\n    createRequestForSingleItem(url, accessToken)\r\n  );\r\n  const fetches = requests.map((request) =>\r\n    fetch(request).then((fulfilled) => fulfilled.json())\r\n  );\r\n\r\n  return await Promise.all(fetches).then((fulfilleds) => {\r\n    const resultUrls = fulfilleds.map((fulfilled) => {\r\n      const baseUrl = fulfilled.baseUrl;\r\n      const productUrl = fulfilled.productUrl;\r\n      return { baseUrl, productUrl };\r\n    });\r\n    return resultUrls;\r\n  });\r\n}\r\n\r\n// take a list of base urls, return a list of image blob urls\r\nexport async function requestImages(urls, accessToken) {\r\n  let data = [];\r\n  const simpleOptions = createBaseInit(accessToken);\r\n  // fetch each url and push the blob in response to data\r\n  await urls.forEach((url) => {\r\n    fetch(url, simpleOptions)\r\n      .then((response) => {\r\n        const blobResponse = response.blob();\r\n        data.push(blobResponse);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n\r\n  const urlCreator = window.URL || window.webkitURL;\r\n  const result = data.map((blob) => urlCreator.createObjectURL(blob));\r\n\r\n  return result;\r\n}\r\n\r\nfunction filterResponseData(responseJson) {\r\n  const mediaItems = responseJson.mediaItems;\r\n  return mediaItems\r\n    ? responseJson.mediaItems.map((mediaItem) => {\r\n        const { id, productUrl, filename, description } = mediaItem;\r\n        return { id, productUrl, filename, description };\r\n      })\r\n    : null;\r\n}","/* global gapi */\r\nimport React from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport * as credentials from './credentials.json';\r\nimport { getTimeStamp } from './lib/indexedDBController';\r\nimport { requestAllMediaItems, setUpdateTime } from './lib/GapiConnection';\r\nimport { Button } from '@material-ui/core';\r\nimport { useAccessUpdate, useAccess } from './Context/AccessContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\n\r\nconst oauth2 = {\r\n  clientID: credentials.web.client_id,\r\n  projectId: 'search-chinese-1595873063241',\r\n  authUri: 'https://accounts.google.com/o/oauth2/auth',\r\n  tokenUri: 'https://oauth2.googleapis.com/token',\r\n  scopes: [\r\n    'https://www.googleapis.com/auth/photoslibrary',\r\n    'https://www.googleapis.com/auth/photoslibrary.readonly',\r\n  ],\r\n};\r\n\r\nexport default function GoogleBtn(props) {\r\n  // const classes = useStyles();\r\n  const updateAccessToken = useAccessUpdate().handleAccessToken;\r\n  const updateBackdrop = useFeedbackUpdate().handleBackdrop;\r\n  const updateTextMessage = useFeedbackUpdate().handleTextMessage;\r\n  const updateIsLogined = useAccessUpdate().handleIsLogined;\r\n  const isLogined = useAccess().isLogined;\r\n\r\n  // get the access token from Google\r\n  const login = (response) => {\r\n    if (response.accessToken) {\r\n      updateIsLogined(true);\r\n      updateAccessToken(response.accessToken);\r\n      // start request\r\n      handleRequest(response.accessToken);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    updateIsLogined(false);\r\n    updateAccessToken('');\r\n    // clear search results\r\n  };\r\n\r\n  const handleLoginFailure = (response) => {\r\n    alert('Failed to log in');\r\n  };\r\n  const handleLogoutFailure = (response) => {\r\n    alert('Failed to log out');\r\n  };\r\n\r\n  // run after the log-in is completed\r\n  const handleRequest = (accessToken) => {\r\n    console.log('handleRequest is called');\r\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\r\n\r\n    // If it's the first time that the user login\r\n    if (!getTimeStamp()) {\r\n      updateTextMessage('Initializing Local Data Storage. This may take long time depends the quantity of media items in your library');\r\n      updateBackdrop(true);\r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          // Update the LastUpdateView\r\n          props.onSetLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    } else {\r\n      //TODO: get new items since last update\r\n\r\n      setUpdateTime()\r\n        .then(() => {\r\n          props.onSetLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLogined ? (\r\n        <GoogleLogout\r\n          clientId={oauth2.clientID}\r\n          onLogoutSuccess={logout}\r\n          buttonText='Logout'\r\n          onFailure={handleLogoutFailure}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Logout\r\n            </Button>\r\n          )}\r\n          cookiePolicy={'single_host_origin'}\r\n        />\r\n      ) : (\r\n        <GoogleLogin\r\n          clientId={oauth2.clientID}\r\n          onSuccess={login}\r\n          onFailure={handleLoginFailure}\r\n          cookiePolicy='single_host_origin'\r\n          responseType='code,token'\r\n          scope={oauth2.scopes[1]}\r\n          isSignedIn={true}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Login\r\n            </Button>\r\n          )}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { searchForItems } from './lib/indexedDBController';\r\nimport { requestForSingleItem } from './lib/GapiConnection';\r\nimport { useAccess } from './Context/AccessContext';\r\nimport { useUrlUpdate } from './Context/UrlsContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    // width: '100%',\r\n    // marginBottom: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      // marginLeft: theme.spacing(3),\r\n      marginBottom: theme.spacing(0),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    // width: '70%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchBar() {\r\n  const classes = useStyles();\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updatePhotoUrls = useUrlUpdate().handlePhotoUrls;\r\n  const updateIsSearching = useFeedbackUpdate().handleIsSearching;\r\n  const updateSearchedIds = useUrlUpdate().handleSearchedIds;\r\n  const updateIsNoMatch = useFeedbackUpdate().handleIsNoMatch;\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  // Search, use the keyword in state, go through the local IndexedDB, pass the base urls to Photos\r\n  const handleSearch = () => {\r\n    const t0 = performance.now();\r\n    console.log(`Search start: ${t0} milliseconds`);\r\n\r\n    // No input in the searchbar\r\n    if (!keyword) {\r\n      return false;\r\n    }\r\n\r\n    // show the progress feedback\r\n    updateIsSearching(true);\r\n\r\n    // reset search result to null\r\n    updateSearchedIds([]);\r\n\r\n    // send keyword to search media items from IndexedDB\r\n    // get the image URLs\r\n    searchForItems(keyword)\r\n      .then((fulfilled) => {\r\n        const ids = fulfilled.map( data => data.item.id);\r\n        updateSearchedIds(ids);\r\n        if (!ids.length) {\r\n          // display a error feedback\r\n          updateIsNoMatch(true);\r\n          return 'No result';\r\n        }\r\n        updateIsSearching(false);\r\n\r\n        // request for the base urls and the product urls\r\n        requestForSingleItem(ids, accessToken).then((urls) => {\r\n          console.log(urls);\r\n          // send the base urls in response to App\r\n          updatePhotoUrls(urls);\r\n        });\r\n      })\r\n      .catch((rejected) => console.log('Error: ' + rejected))\r\n      .finally(() => updateIsSearching(false));\r\n  };\r\n\r\n  const handleKeywordChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  const handleSearchKeyUp = (event) => {\r\n    if (event.keyCode === 13) {\r\n      // Cancel the default action, if needed\r\n      event.preventDefault();\r\n      // Trigger the button element with a click\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.search} item xs={9}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          placeholder='Search…'\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          onChange={handleKeywordChange}\r\n          onKeyUp={handleSearchKeyUp}\r\n          autoFocus={true}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant='contained'\r\n          onClick={handleSearch}\r\n          disabled={!isLogined}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Typography, Box, Container, Divider } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    marginTop: theme.spacing(15),\n    padding: theme.spacing(2),\n    maxWidth: '90%',\n    backgroundColor: 'white',\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '70%',\n    },\n  },\n  title: {\n    padding: theme.spacing(1),\n  },\n  firstPara: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(1),\n  },\n  footNote: {\n    marginTop: theme.spacing(1),\n  }\n}));\n\nexport default function HelpModal(props) {\n  const classes = useStyles();\n  const BodyPara = (props) => {\n    return (\n      <Typography color='textSecondary' className={classes.body + ' ' + props.className} align={props.align}>\n        {props.children}\n      </Typography>\n    );\n  };\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Container className={classes.root}>\n        <Box>\n          <Typography\n            color='textPrimary'\n            variant='h4'\n            className={classes.title}\n          >\n            Google Photos Search Enhancer\n          </Typography>\n          <Divider />\n          <Box>\n            <Typography color='textSecondary' className={classes.firstPara}>\n              This app will help you to search through the descriptions and\n              filenames in your Google Photos Library. Click the 'LOGIN' button to start!\n            </Typography>\n            <ul>\n              <li>\n                <BodyPara>\n                  <strong>Data:</strong> All data in this application are stored locally. None of\n                  them would be uploaded to any server.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Update:</strong> Please click the 'Update' button to get the latest\n                  change in your Google Photos Library.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Edit:</strong> Click the photo in the search result, then you can edit\n                  it in your Google Photos\n                </BodyPara>\n              </li>\n            </ul>\n          </Box>\n          <Divider/>\n          <BodyPara align='right' className={classes.footNote}>For further help, please send email to yangyi621#outlook.com &#40;replace # by @&#41;</BodyPara>\n        </Box>\n      </Container>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nexport default function MyDialog(props) {\n  const handleIsAgreed = (bool) => () => {\n    props.onAgreed(bool);\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={handleIsAgreed(false)}\n      aria-describedby='alert-dialog-description'\n    >\n      <DialogContent>\n        <DialogContentText id='alert-dialog-description'>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleIsAgreed(false)} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleIsAgreed(true)} color='primary' autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Title } from './Title';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport GoogleBtn from './GoogleBtn';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport React, { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Box, Grid, IconButton, Snackbar } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport {\r\n  clearData,\r\n  getTimeStamp,\r\n  setTimeStamp,\r\n  checkNotFirstVisit,\r\n} from './lib/indexedDBController';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { requestAllMediaItems } from './lib/GapiConnection';\r\nimport { useAccess } from './Context/AccessContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HelpModal from './HelpModal';\r\nimport MyDialog from './MyDialog';\r\nimport { formatDate } from './lib/processor';\r\n\r\nexport default function MyAppBar() {\r\n  // Styles\r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    offset: theme.mixins.toolbar,\r\n  }));\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let justifyStyle;\r\n  useMediaQuery(theme.breakpoints.up('md'))\r\n    ? (justifyStyle = 'flex-end')\r\n    : (justifyStyle = 'center');\r\n\r\n  // Context\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updateFeedback = useFeedbackUpdate();\r\n\r\n  // States\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [lastUpdateTime, setLastUpdateTime] = useState('');\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\r\n  const [snackPack, setSnackPack] = useState([]);\r\n  const [messageInfo, setMessageInfo] = useState('');\r\n  const [severity, setSeverity] = useState(undefined);\r\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\r\n  const [openUpdateAlertDialog, setOpenUpdateAlertDialog] = useState(false);\r\n  const [isUpdateRequestAgreed, setIsUpdateRequestAgreed] = useState(undefined);\r\n\r\n  // Update SnackPack\r\n  React.useEffect(() => {\r\n    if (snackPack.length) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo(snackPack[0].message);\r\n      setSeverity(snackPack[0].severity);\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setIsSnackbarOpen(true);\r\n    } else if (snackPack.length && messageInfo && isSnackbarOpen) {\r\n      // Close an active snack when a new one is added\r\n      setIsSnackbarOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, isSnackbarOpen]);\r\n\r\n  // Update local data when update request is confrimed\r\n  React.useEffect(() => {\r\n    if (isUpdateRequestAgreed === true) {\r\n      updateFeedback.handleBackdrop(true);\r\n      updateFeedback.handleTextMessage(\r\n        'Updating local data... Please wait for a while'\r\n      );\r\n\r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          console.log('Update completed!');\r\n          addSnackPack('success', 'Update completed!');\r\n          // Update the LastUpdateView\r\n          setLastUpdateTime(getTimeStamp());\r\n        })\r\n        .finally(() => {\r\n          updateFeedback.handleBackdrop(false);\r\n          updateFeedback.handleTextMessage('');\r\n        });\r\n      setIsUpdateRequestAgreed(undefined);\r\n    }\r\n  }, [isUpdateRequestAgreed, accessToken, updateFeedback]);\r\n\r\n  React.useEffect(() => {\r\n    // If it's the first time\r\n    if (!checkNotFirstVisit()) {\r\n      setIsHelpModalOpen(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClear = () => {\r\n    clearData().then(() => addSnackPack('success', 'Clear completed!'));\r\n    setTimeStamp('');\r\n    setLastUpdateTime(getTimeStamp());\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setIsSnackbarOpen(false);\r\n  };\r\n\r\n  const addSnackPack = (sever, text) => {\r\n    const severity = sever || 'info';\r\n    const message = text || \"Don't panic\";\r\n    setSnackPack((prev) => [\r\n      ...prev,\r\n      { severity, message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleHelpModalClose = () => {\r\n    setIsHelpModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position='sticky'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems='center' justify='flex-start' spacing={1}>\r\n            <Grid\r\n              container\r\n              item\r\n              justify='flex-start'\r\n              alignItems='center'\r\n              lg={4}\r\n              md={5}\r\n              xs={12}\r\n            >\r\n              <Title\r\n                setIsDrawerOpen={setIsDrawerOpen}\r\n                clsx={clsx}\r\n                isDrawerOpen={isDrawerOpen}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify='flex-start'\r\n              lg={5}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <SearchBar />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify={justifyStyle}\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n            >\r\n              <GoogleBtn\r\n                onSetLastUpdateTime={() => setLastUpdateTime(getTimeStamp())}\r\n                lastUpdateTime={lastUpdateTime}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant='persistent'\r\n        anchor='left'\r\n        open={isDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={() => setIsDrawerOpen(false)}>\r\n            {theme.direction === 'ltr' ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={() => setOpenUpdateAlertDialog(true)}\r\n            disabled={!isLogined}\r\n          >\r\n            <ListItemText primary='Update data' />\r\n          </ListItem>\r\n          <ListItem button onClick={handleClear} disabled={!lastUpdateTime}>\r\n            <ListItemText primary='Clear data' />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() => setIsHelpModalOpen(true)}\r\n            disabled={isHelpModalOpen}\r\n          >\r\n            <ListItemText primary='Help' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <Typography\r\n          variant='subtitle1'\r\n          display='block'\r\n          gutterBottom\r\n          className={classes.content}\r\n          color='textSecondary'\r\n        >\r\n          <Box>Last Update:</Box>\r\n          {lastUpdateTime ? formatDate(lastUpdateTime) : 'No data'}\r\n        </Typography>\r\n      </Drawer>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        open={isSnackbarOpen}\r\n        onClose={handleSnackbarClose}\r\n        autoHideDuration={3000}\r\n      >\r\n        <MuiAlert\r\n          onClose={handleSnackbarClose}\r\n          severity={severity}\r\n          elevation={6}\r\n          variant='filled'\r\n        >\r\n          {messageInfo}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      <HelpModal open={isHelpModalOpen} onClose={handleHelpModalClose} />\r\n      <MyDialog\r\n        open={openUpdateAlertDialog}\r\n        onClose={() => setOpenUpdateAlertDialog(false)}\r\n        onAgreed={(isAgreed) => setIsUpdateRequestAgreed(isAgreed)}\r\n      >\r\n        <Typography color='textPrimary'>\r\n          Depending on the quantity of items in your Google Photos Library, the\r\n          updating time could be up to a few minutes. Are you sure to update?\r\n        </Typography>\r\n      </MyDialog>\r\n    </div>\r\n  );\r\n}\r\n","\n\nexport const formatDate = (date) => {\n  const d = new Date(date);\n  const addZero = (input) => {\n    if (input.length < 2) input = '0' + input;\n  };\n  let month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear(),\n    hours = '' + d.getHours(),\n    minutes = '' + d.getMinutes(),\n    seconds = '' + d.getSeconds();\n\n  addZero(month);\n  addZero(day);\n  addZero(hours);\n  addZero(minutes);\n  addZero(seconds);\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n};","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Masonry from 'react-masonry-css';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { useUrl } from './Context/UrlsContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n    marginTop: '10px',\r\n    marginLeft: '10px',\r\n  },\r\n  gridListTile: {\r\n    maxWidth: 480,\r\n    maxHeight: 360,\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n    '&:hover': {\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n  masonryGrid: {\r\n    display: 'flex',\r\n    marginLeft: '-30px' /* gutter size offset */,\r\n    width: '100%',\r\n  },\r\n  masonryGridColumn: {\r\n    paddingLeft: '20px' /* gutter size */,\r\n    backgroundClip: 'padding-box',\r\n    /* change div to reference your elements you put in <Masonry> */\r\n    '& > div': {\r\n      marginBottom: '30px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Photos(props) {\r\n  // Style\r\n  const classes = useStyles();\r\n  const breakpointColumnsObj = {\r\n    default: 6,\r\n    1920: 4,\r\n    1280: 3,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  // States\r\n  const [loadingPhotos, setLoadingPhotos] = useState(true);\r\n  const photoUrls = useUrl().photoUrls;\r\n\r\n\r\n  // TODO: because async requests after searching for displaying, we have to wait\r\n  // should fix the timeout logic later\r\n  useEffect(() => {\r\n    // setLoadingPhotos(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setLoadingPhotos(false);\r\n    }, 1200);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handleClick = (url) => {\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loadingPhotos ? (\r\n        <Grid container spacing={1} >\r\n          {props.ids.map((id) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={id}>\r\n              <Skeleton variant='rect' height={300} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className={classes.masonryGrid}\r\n          columnClassName={classes.masonryGridColumn}\r\n        >\r\n          {props.ids.map((id, index) => (\r\n            <img\r\n              key={id}\r\n              src={`${photoUrls[index].baseUrl}=w640-h640`}\r\n              alt='Google Photos'\r\n              className={classes.image}\r\n              onClick={() => handleClick(photoUrls[index].productUrl)}\r\n            />\r\n          ))}\r\n        </Masonry>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFeedback } from './Context/FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  leftPadding: {\r\n    paddingLeft: '15px',\r\n  }\r\n}));\r\n\r\nexport default function SimpleBackdrop() {\r\n  const classes = useStyles();\r\n  const isBackdropOpened = useFeedback().isBackdropOpened;\r\n  const textMessage = useFeedback().textMessage;\r\n\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={isBackdropOpened}>\r\n      <CircularProgress color='inherit' />\r\n      <Typography className={classes.leftPadding}>{textMessage}</Typography>\r\n    </Backdrop>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icons8-search-500.ff17960a.png\";","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFeedback, useFeedbackUpdate } from './Context/FeedbackContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: '15px',\r\n  },\r\n}));\r\n\r\nexport default function NoMatchedSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  const isNoMatch = useFeedback().isNoMatch;\r\n  const updateIsNoMatch = useFeedbackUpdate().handleIsNoMatch;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      updateIsNoMatch(false);\r\n      return;\r\n    }\r\n    updateIsNoMatch(false);\r\n  };\r\n\r\n  function Alert(props) {\r\n    return (\r\n      <MuiAlert elevation={6} variant=\"filled\" onClick={handleClose} {...props}>\r\n        Not Found\r\n      </MuiAlert>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center',\r\n        }}\r\n        open={isNoMatch}\r\n        autoHideDuration={5000}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n      >\r\n        <Alert severity=\"warning\"></Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport MyAppBar from './MyAppBar';\nimport Photos from './Photos';\nimport SimpleBackdrop from './Backdrop';\nimport { Box, LinearProgress } from '@material-ui/core/';\nimport { useFeedback } from './Context/FeedbackContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUrl } from './Context/UrlsContext';\nimport icon from '../images/icons8-search-500.png';\nimport NoMatchedSnackbar from './NoMatchedSnackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    minHeight: '94vh',\n  },\n  centerText: {\n    color: '#2d72bc',\n    textDecoration: 'none',\n    fontWeight: '800',\n    fontFamily: 'Nunito, Helvetica, Arial, sans-serif',\n    fontSize: '2em',\n  },\n  centerLayout: {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  image: {\n    maxWidth: '500px',\n    maxHeight: '500px',\n    width: '40%',\n    [theme.breakpoints.up('md')]: {\n      width: '20%',\n    },\n  },\n}));\n\nconst CenterBackground = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centerText + ' ' + classes.centerLayout}>\n      <img src={icon} alt='search-icon' className={classes.image} />\n    </div>\n  );\n};\n\nexport default function Main() {\n  const classes = useStyles();\n\n  const isSearching = useFeedback().isSearching;\n  const ids = useUrl().searchedIds;\n\n  return (\n    <Box className={classes.main}>\n      <MyAppBar />\n      {ids && ids.length ? <Photos ids={ids} /> : <CenterBackground />}\n      <NoMatchedSnackbar />\n      <SimpleBackdrop />\n      {isSearching ? <LinearProgress /> : null}\n    </Box>\n  );\n}\n","import AccessProvider from './Context/AccessContext';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FeedbackProvider from './Context/FeedbackContext';\r\nimport Footer from './Footer';\r\nimport UrlsProvider from './Context/UrlsContext';\r\nimport React from 'react';\r\nimport Main from './Main';\r\n\r\nexport default function App() {\r\n  return (\r\n    <AccessProvider>\r\n      <UrlsProvider>\r\n        <FeedbackProvider>\r\n          <CssBaseline />\r\n          <Main />\r\n          <Footer />\r\n        </FeedbackProvider>\r\n      </UrlsProvider>\r\n    </AccessProvider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}