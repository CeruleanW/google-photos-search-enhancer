{"version":3,"sources":["components/Context/AccessContext.js","components/Context/FeedbackContext.js","components/Footer.jsx","components/Context/UrlsContext.js","components/IndexedDBController.js","components/GapiConnection.js","components/GoogleBtn.jsx","components/SearchBar.jsx","components/HelpModal.jsx","components/MyDialog.jsx","components/MyAppBar.jsx","components/Photos.jsx","components/Backdrop.jsx","images/icons8-search-500.png","components/NoMatchedSnackbar.jsx","components/Main.jsx","components/App.js","serviceWorker.js","index.js"],"names":["AccessContext","React","createContext","AccessUpdateContext","useAccess","useContext","useAccessUpdate","AccessProvider","children","useState","accessToken","setAccessToken","isLogined","setIsLogined","Provider","value","handleAccessToken","token","handleIsLogined","logined","FeedbackContext","FeedbackUpdateContext","useFeedback","useFeedbackUpdate","FeedbackProvider","isBackdropOpened","setisBackdropOpened","textMessage","setTextMessage","isSearching","setIsSearching","isNoMatch","setIsNoMatch","handleBackdrop","handleTextMessage","text","handleIsSearching","isSearch","handleIsNoMatch","useStyles","makeStyles","footerLink","color","Footer","classes","bottomThreshold","normalStyles","backgroundColor","padding","font","stickyStyles","Container","Typography","align","className","href","PhotoUrlContext","PhotoUrlUpdateContext","useUrl","useUrlUpdate","UrlsProvider","photoUrls","setPhotoUrls","searchedIds","setSearchedIds","handlePhotoUrls","handleSearchedIds","ids","dbPromise","setTimeStamp","localStorage","setItem","Date","getTimeStamp","getItem","storeMediaItems","mediaItems","a","db","tx","transaction","forEach","Promise","resolve","reject","store","put","catch","error","console","log","clear","keyword","t0","performance","now","openCursor","cursor","result","t1","des","description","fileName","filename","includes","push","key","continue","openDB","upgrade","createObjectStore","keyPath","autoIncrement","signal","AbortController","createBaseInit","myHeaders","Object","assign","Authorization","headers","mode","createInit","pageToken","httpMethod","filters","includeArchivedMedia","pageSize","init","body","JSON","stringify","method","createRequest","apiURL","queryStrings","url","objectToQueryString","createRequestForSingleItem","obj","keys","map","join","requestAllMediaItems","requestAPageOfMediaItems","onePageData","storedData","filterResponseData","nextToken","nextPageToken","name","message","request","access_token","options","p","fetch","then","response","json","urls","id","requests","fetches","fulfilled","all","fulfilleds","baseUrl","productUrl","responseJson","mediaItem","oauth2","clientID","credentials","client_id","projectId","authUri","tokenUri","scopes","GoogleBtn","props","updateAccessToken","updateBackdrop","updateTextMessage","updateIsLogined","handleRequest","window","gapi","auth2","getAuthInstance","setUpdateTime","onSetLastUpdateTime","finally","Fragment","clientId","onLogoutSuccess","buttonText","onFailure","alert","render","renderProps","Button","variant","onClick","disabled","cookiePolicy","onSuccess","responseType","scope","isSignedIn","theme","search","position","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","marginBottom","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","updatePhotoUrls","updateIsSearching","updateSearchedIds","updateIsNoMatch","setKeyword","handleSearch","length","requestForSingleItem","rejected","Grid","item","xs","InputBase","placeholder","root","input","inputProps","onChange","event","target","onKeyUp","keyCode","preventDefault","autoFocus","margin","marginTop","maxWidth","title","firstPara","footNote","HelpModal","BodyPara","Modal","open","onClose","Box","Divider","MyDialog","handleIsAgreed","bool","onAgreed","Dialog","aria-describedby","DialogContent","DialogContentText","DialogActions","MyAppBar","justifyStyle","drawerWidth","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","down","fontSize","offset","useTheme","useMediaQuery","updateFeedback","isDrawerOpen","setIsDrawerOpen","lastUpdateTime","setLastUpdateTime","isSnackbarOpen","setIsSnackbarOpen","snackPack","setSnackPack","messageInfo","setMessageInfo","undefined","severity","setSeverity","isHelpModalOpen","setIsHelpModalOpen","openUpdateAlertDialog","setOpenUpdateAlertDialog","isUpdateRequestAgreed","setIsUpdateRequestAgreed","useEffect","prev","slice","addSnackPack","noFirstVisit","handleSnackbarClose","sever","getTime","AppBar","clsx","Toolbar","container","justify","lg","md","IconButton","aria-label","edge","Drawer","anchor","paper","direction","List","ListItem","button","ListItemText","primary","clearData","gutterBottom","date","d","addZero","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDate","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","isAgreed","flexWrap","overflow","gridListTile","maxHeight","image","opacity","masonryGrid","masonryGridColumn","backgroundClip","Photos","loadingPhotos","setLoadingPhotos","timer","setTimeout","clearTimeout","sm","xl","Skeleton","breakpointCols","default","1920","1280","960","600","columnClassName","index","src","alt","backdrop","zIndex","leftPadding","SimpleBackdrop","Backdrop","CircularProgress","NoMatchedSnackbar","handleClose","reason","Alert","main","minHeight","linearProgress","centerText","textDecoration","fontWeight","fontFamily","centerLayout","top","transform","CenterBackground","icon","Main","LinearProgress","App","CssBaseline","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f7fe1c3.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nconst AccessContext = React.createContext();\r\nconst AccessUpdateContext = React.createContext();\r\n\r\nexport function useAccess() {\r\n  return useContext(AccessContext);\r\n}\r\n\r\nexport function useAccessUpdate() {\r\n  return useContext(AccessUpdateContext);\r\n}\r\n\r\nexport default function AccessProvider( {children} ) {\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [isLogined, setIsLogined] = useState(false);\r\n\r\n  function handleAccessToken(token) {\r\n    setAccessToken(token);\r\n  }\r\n\r\n  function handleIsLogined(logined) {\r\n    setIsLogined(logined);\r\n  }\r\n\r\n  return (\r\n    <AccessContext.Provider value={{accessToken, isLogined}}>\r\n      <AccessUpdateContext.Provider value={{handleAccessToken, handleIsLogined}}>\r\n      {children}\r\n      </AccessUpdateContext.Provider>\r\n    </AccessContext.Provider>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst FeedbackContext = React.createContext();\r\nconst FeedbackUpdateContext = React.createContext();\r\n\r\nexport function useFeedback() {\r\n  return useContext(FeedbackContext);\r\n}\r\n\r\nexport function useFeedbackUpdate() {\r\n  return useContext(FeedbackUpdateContext);\r\n}\r\n\r\nexport default function FeedbackProvider( {children} ) {\r\n  const [isBackdropOpened, setisBackdropOpened] = useState(false);\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isNoMatch, setIsNoMatch] = useState(false);\r\n\r\n  function handleBackdrop(isBackdropOpened) {\r\n    setisBackdropOpened(isBackdropOpened);\r\n  }\r\n\r\n  function handleTextMessage(text) {\r\n    setTextMessage(text);\r\n  }\r\n\r\n  function handleIsSearching(isSearch) {\r\n    setIsSearching(isSearch);\r\n  }\r\n\r\n  function handleIsNoMatch(isNoMatch) {\r\n    setIsNoMatch(isNoMatch);\r\n  }\r\n\r\n  return (\r\n    <FeedbackContext.Provider value={{isBackdropOpened, textMessage, isSearching, isNoMatch}}>\r\n      <FeedbackUpdateContext.Provider value={{handleBackdrop, handleTextMessage, handleIsSearching, handleIsNoMatch}}>\r\n      {children}\r\n      </FeedbackUpdateContext.Provider>\r\n    </FeedbackContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\n// Library Link: https://www.npmjs.com/package/react-sticky-footer\r\nimport StickyFooter from 'react-sticky-footer';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  footerLink: {\r\n    '&:visited': {\r\n      color: 'blueviolet'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Footer() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n    <StickyFooter\r\n    bottomThreshold={50}\r\n    // stickAtThreshold={0}\r\n      normalStyles={{\r\n        backgroundColor: '#1b2024',\r\n        padding: '1rem',\r\n        color: 'rgb(192 192 192)',\r\n        font: \"300 0.9rem 'Lora', serif\",\r\n      }}\r\n      stickyStyles={{\r\n        backgroundColor: 'rgba(255,255,255,.8)',\r\n        padding: '1rem',\r\n        font: \"300 1rem 'Lora', serif\",\r\n\t\t\t}}\r\n    >\r\n      <Container>\r\n        <Typography align='center' >\r\n          {' '}\r\n          Copyright &copy; 2020 Developed with ❤️ by\r\n          <a className={classes.footerLink}\r\n            href='https://github.com/CeruleanW'\r\n          >\r\n            {' '}\r\n            Yi Yang\r\n          </a>\r\n        </Typography>\r\n      </Container>\r\n    </StickyFooter>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst PhotoUrlContext = React.createContext();\r\nconst PhotoUrlUpdateContext = React.createContext();\r\n\r\nexport function useUrl() {\r\n  return useContext(PhotoUrlContext);\r\n}\r\n\r\nexport function useUrlUpdate() {\r\n  return useContext(PhotoUrlUpdateContext);\r\n}\r\n\r\nexport default function UrlsProvider( {children} ) {\r\n  const [photoUrls, setPhotoUrls] = useState([]);\r\n  const [searchedIds, setSearchedIds] = useState([]);\r\n\r\n  function handleSearchedIds(ids) {\r\n    setSearchedIds(ids);\r\n  }\r\n\r\n  function handlePhotoUrls(photoUrls) {\r\n    setPhotoUrls(photoUrls);\r\n  }\r\n\r\n  return (\r\n    <PhotoUrlContext.Provider value={{photoUrls, searchedIds}}>\r\n      <PhotoUrlUpdateContext.Provider value={{handlePhotoUrls, handleSearchedIds}}>\r\n      {children}\r\n      </PhotoUrlUpdateContext.Provider>\r\n    </PhotoUrlContext.Provider>\r\n  )\r\n}\r\n","import { openDB } from 'idb';\r\n\r\nlet dbPromise;\r\ncreateDatabase();\r\n\r\nexport function checkNotFirstVisit() {\r\n  if (!localStorage.noFirstVisit) {\r\n    console.log('first time');\r\n    localStorage.noFirstVisit = '1';\r\n    return false;\r\n  }\r\n  return localStorage.noFirstVisit;\r\n}\r\n\r\nexport function setTimeStamp(value = true) {\r\n  if (value) {\r\n    localStorage.setItem('updateTime', new Date());\r\n  } else {\r\n    localStorage.setItem('updateTime', '');\r\n  }\r\n}\r\n// return a date object or a empty string\r\nexport function getTimeStamp() {\r\n  return localStorage.getItem('updateTime');\r\n}\r\n\r\n// Create a database with a 'localMediaItems' object store\r\nexport function createDatabase() {\r\n  dbPromise = openDB('db', 1, {\r\n    upgrade(db) {\r\n      db.createObjectStore('localMediaItems', {\r\n        keyPath: 'id',\r\n        autoIncrement: true,\r\n      });\r\n    },\r\n  });\r\n  setTimeStamp();\r\n\r\n  return dbPromise;\r\n}\r\n\r\n// store an array\r\nexport async function storeMediaItems(mediaItems) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction('localMediaItems', 'readwrite');\r\n  mediaItems.forEach((value) => {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(tx.store.put(value));\r\n    }).catch((error) => {\r\n      console.log('Error: failed to store data in IndexedDB' + error);\r\n    });\r\n  });\r\n}\r\n\r\nexport async function clearData() {\r\n  const db = await dbPromise;\r\n  return db.clear('localMediaItems');\r\n}\r\n\r\n// search a keyword and return an array of matched Ids(keys)\r\nexport async function search(keyword) {\r\n  console.log('Keyword:' + keyword);\r\n  const t0 = performance.now();\r\n\r\n  // request data from IndexedDB\r\n  const db = await dbPromise;\r\n  let store = db.transaction('localMediaItems').store;\r\n  let cursor = await store.openCursor();\r\n  let result = [];\r\n\r\n  const t1 = performance.now();\r\n  console.log(`search function took ${t1 - t0} milliseconds.`);\r\n  // loop through each media items\r\n  while (cursor) {\r\n    let des = cursor.value.description;\r\n    let fileName = cursor.value.filename;\r\n    if (fileName && fileName.includes(keyword)) {\r\n      result.push(cursor.key);\r\n    } else if (des && des.includes(keyword)) {\r\n      result.push(cursor.key);\r\n    }\r\n    cursor = await cursor.continue();\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default function IndexedDB() {}\r\n","/* global gapi */\r\nimport {\r\n  storeMediaItems,\r\n  setTimeStamp,\r\n  getTimeStamp,\r\n} from \"./IndexedDBController\";\r\n\r\nexport const controller = new AbortController();\r\nconst signal = controller.signal;\r\n\r\nconst createBaseInit = (accessToken) => {\r\n  let myHeaders = {};\r\n  Object.assign(myHeaders, { \"Content-Type\": \"application/json\" });\r\n  Object.assign(myHeaders, { Authorization: `Bearer ${accessToken}` });\r\n\r\n  const baseInit = {\r\n    headers: myHeaders,\r\n    mode: \"cors\",\r\n    signal,\r\n  };\r\n\r\n  return baseInit;\r\n};\r\n\r\n// return an init object for Fetch\r\nconst createInit = (\r\n  accessToken,\r\n  pageToken,\r\n  httpMethod = \"POST\",\r\n  filters = { includeArchivedMedia: true },\r\n  pageSize = 100\r\n) => {\r\n  let init = createBaseInit(accessToken);\r\n\r\n  // create body\r\n  let body = {\r\n    filters,\r\n    pageSize,\r\n  };\r\n  if (pageToken) {\r\n    Object.assign(body, { pageToken: pageToken });\r\n  }\r\n  body = JSON.stringify(body);\r\n\r\n  //assign body\r\n  Object.assign(init, { method: httpMethod, mode: \"cors\", body });\r\n\r\n  return init;\r\n};\r\n\r\nconst createRequest = (\r\n  apiURL = \"https://photoslibrary.googleapis.com/v1/mediaItems\",\r\n  queryStrings\r\n) => {\r\n  let url = apiURL;\r\n  if (queryStrings) {\r\n    url += \"?\" + objectToQueryString(queryStrings);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst createRequestForSingleItem = (url, accessToken) => {\r\n  return `${url}?access_token=${accessToken}`;\r\n};\r\n\r\nconst objectToQueryString = (obj) => {\r\n  return Object.keys(obj)\r\n    .map((key) => key + \"=\" + obj[key])\r\n    .join(\"&\");\r\n};\r\n\r\n// request for all media items and store the result in the IndexedDB\r\n// return the setted time stamp\r\n// Default: include archived items\r\nexport async function requestAllMediaItems(\r\n  accessToken,\r\n  url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n  httpMethod = \"POST\"\r\n) {\r\n  let nextToken;\r\n  try {\r\n    // fetch a page of data from Google API\r\n    let onePageData = await requestAPageOfMediaItems(\r\n      accessToken,\r\n      false,\r\n      url,\r\n      httpMethod\r\n    );\r\n\r\n    do {\r\n      //store data from response\r\n      const storedData = filterResponseData(onePageData);\r\n      if (storedData) {\r\n        storeMediaItems(storedData);\r\n      }\r\n\r\n      // use the nextPageToken to get the data in the next page\r\n      nextToken = onePageData.nextPageToken;\r\n      onePageData = await requestAPageOfMediaItems(\r\n        accessToken,\r\n        nextToken,\r\n        url,\r\n        httpMethod\r\n      );\r\n    } while (nextToken);\r\n  } catch (err) {\r\n    console.log(err.name + \": \" + err.message);\r\n  }\r\n\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise wrapping the response JSON\r\nasync function requestAPageOfMediaItems(\r\n  accessToken,\r\n  pageToken = \"\",\r\n  url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n  method = \"POST\"\r\n) {\r\n  const queryStrings = { access_token: accessToken };\r\n  const request = createRequest(url, queryStrings);\r\n  const options = createInit(accessToken, pageToken, method);\r\n  // const request = \"https://photoslibrary.googleapis.com/v1/mediaItems\";\r\n\r\n  const p = fetch(request, options)\r\n    .then((response) => {\r\n      const json = response.json();\r\n      // console.log(\"Fetching: \" + json);\r\n      return json;\r\n    })\r\n    .catch((error) => console.error(error));\r\n\r\n  return p;\r\n}\r\n\r\nexport async function setUpdateTime() {\r\n  // get items that not exists in IndexedDB\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise with the fulfilled value\r\n// the value is an array of object, which has 2 property: baseUrl & productUrl\r\nexport async function requestForSingleItem(ids, accessToken) {\r\n  // set a list of requests\r\n  const urls = ids.map(\r\n    (id) => `https://photoslibrary.googleapis.com/v1/mediaItems/${id}`\r\n  );\r\n  const requests = urls.map((url) =>\r\n    createRequestForSingleItem(url, accessToken)\r\n  );\r\n  const fetches = requests.map((request) =>\r\n    fetch(request).then((fulfilled) => fulfilled.json())\r\n  );\r\n\r\n  return await Promise.all(fetches).then((fulfilleds) => {\r\n    const resultUrls = fulfilleds.map((fulfilled) => {\r\n      const baseUrl = fulfilled.baseUrl;\r\n      const productUrl = fulfilled.productUrl;\r\n      return { baseUrl, productUrl };\r\n    });\r\n    return resultUrls;\r\n  });\r\n}\r\n\r\n// take a list of base urls, return a list of image blob urls\r\nexport async function requestImages(urls, accessToken) {\r\n  let data = [];\r\n  const simpleOptions = createBaseInit(accessToken);\r\n  // fetch each url and push the blob in response to data\r\n  await urls.forEach((url) => {\r\n    fetch(url, simpleOptions)\r\n      .then((response) => {\r\n        const blobResponse = response.blob();\r\n        data.push(blobResponse);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n\r\n  const urlCreator = window.URL || window.webkitURL;\r\n  const result = data.map((blob) => urlCreator.createObjectURL(blob));\r\n\r\n  return result;\r\n}\r\n\r\nfunction filterResponseData(responseJson) {\r\n  const mediaItems = responseJson.mediaItems;\r\n  return mediaItems\r\n    ? responseJson.mediaItems.map((mediaItem) => {\r\n        const { id, productUrl, filename, description } = mediaItem;\r\n        return { id, productUrl, filename, description };\r\n      })\r\n    : null;\r\n}\r\n","/* global gapi */\r\nimport React from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport * as credentials from './credentials.json';\r\nimport { getTimeStamp } from './IndexedDBController';\r\nimport { requestAllMediaItems, setUpdateTime } from './GapiConnection';\r\nimport { Button } from '@material-ui/core';\r\nimport { useAccessUpdate, useAccess } from './Context/AccessContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\n\r\nconst oauth2 = {\r\n  clientID: credentials.web.client_id,\r\n  projectId: 'search-chinese-1595873063241',\r\n  authUri: 'https://accounts.google.com/o/oauth2/auth',\r\n  tokenUri: 'https://oauth2.googleapis.com/token',\r\n  scopes: [\r\n    'https://www.googleapis.com/auth/photoslibrary',\r\n    'https://www.googleapis.com/auth/photoslibrary.readonly',\r\n  ],\r\n};\r\n\r\nexport default function GoogleBtn(props) {\r\n  // const classes = useStyles();\r\n  const updateAccessToken = useAccessUpdate().handleAccessToken;\r\n  const updateBackdrop = useFeedbackUpdate().handleBackdrop;\r\n  const updateTextMessage = useFeedbackUpdate().handleTextMessage;\r\n  const updateIsLogined = useAccessUpdate().handleIsLogined;\r\n  const isLogined = useAccess().isLogined;\r\n\r\n  // get the access token from Google\r\n  const login = (response) => {\r\n    if (response.accessToken) {\r\n      updateIsLogined(true);\r\n      updateAccessToken(response.accessToken);\r\n      // start request\r\n      handleRequest(response.accessToken);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    updateIsLogined(false);\r\n    updateAccessToken('');\r\n    // clear search results\r\n  };\r\n\r\n  const handleLoginFailure = (response) => {\r\n    alert('Failed to log in');\r\n  };\r\n  const handleLogoutFailure = (response) => {\r\n    alert('Failed to log out');\r\n  };\r\n\r\n  // run after the log-in is completed\r\n  const handleRequest = (accessToken) => {\r\n    console.log('handleRequest is called');\r\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\r\n\r\n    // If it's the first time that the user login\r\n    if (!getTimeStamp()) {\r\n      updateTextMessage('Initializing Local Data Storage. This may take long time depends the quantity of media items in your library');\r\n      updateBackdrop(true);\r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          // Update the LastUpdateView\r\n          props.onSetLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    } else {\r\n      //TODO: get new items since last update\r\n\r\n      setUpdateTime()\r\n        .then(() => {\r\n          props.onSetLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLogined ? (\r\n        <GoogleLogout\r\n          clientId={oauth2.clientID}\r\n          onLogoutSuccess={logout}\r\n          buttonText='Logout'\r\n          onFailure={handleLogoutFailure}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Logout\r\n            </Button>\r\n          )}\r\n          cookiePolicy={'single_host_origin'}\r\n        />\r\n      ) : (\r\n        <GoogleLogin\r\n          clientId={oauth2.clientID}\r\n          onSuccess={login}\r\n          onFailure={handleLoginFailure}\r\n          cookiePolicy='single_host_origin'\r\n          responseType='code,token'\r\n          scope={oauth2.scopes[1]}\r\n          isSignedIn={true}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Login\r\n            </Button>\r\n          )}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { search } from './IndexedDBController';\r\nimport { requestForSingleItem } from './GapiConnection';\r\nimport { useAccess } from './Context/AccessContext';\r\nimport { useUrlUpdate } from './Context/UrlsContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    // width: '100%',\r\n    // marginBottom: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      // marginLeft: theme.spacing(3),\r\n      marginBottom: theme.spacing(0),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    // width: '70%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchBar() {\r\n  const classes = useStyles();\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updatePhotoUrls = useUrlUpdate().handlePhotoUrls;\r\n  const updateIsSearching = useFeedbackUpdate().handleIsSearching;\r\n  const updateSearchedIds = useUrlUpdate().handleSearchedIds;\r\n  const updateIsNoMatch = useFeedbackUpdate().handleIsNoMatch;\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  // Search, use the keyword in state, go through the local IndexedDB, pass the base urls to Photos\r\n  const handleSearch = () => {\r\n    const t0 = performance.now();\r\n    console.log(`Search start: ${t0} milliseconds`);\r\n    // No input in the searchbar\r\n    if (!keyword) {\r\n      return false;\r\n    }\r\n\r\n    // show the progress feedback\r\n    updateIsSearching(true);\r\n\r\n    // reset search result to null\r\n    updateSearchedIds([]);\r\n\r\n    // pass keyword to search media items from IndexedDB\r\n    // get the image URLs\r\n    search(keyword)\r\n      .then((fulfilled) => {\r\n        const ids = fulfilled;\r\n        updateSearchedIds(ids);\r\n        if (!ids.length) {\r\n          // display a error feedback\r\n          updateIsNoMatch(true);\r\n          return 'No result';\r\n        }\r\n        updateIsSearching(false);\r\n\r\n        // request for the base urls and the product urls\r\n        requestForSingleItem(ids, accessToken).then((urls) => {\r\n          console.log(urls);\r\n          // send the base urls in response to App\r\n          updatePhotoUrls(urls);\r\n        });\r\n      })\r\n      .catch((rejected) => console.log('Error: ' + rejected))\r\n      .finally(() => updateIsSearching(false));\r\n  };\r\n\r\n  const handleKeywordChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  const handleSearchKeyUp = (event) => {\r\n    if (event.keyCode === 13) {\r\n      // Cancel the default action, if needed\r\n      event.preventDefault();\r\n      // Trigger the button element with a click\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.search} item xs={9}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          placeholder='Search…'\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          onChange={handleKeywordChange}\r\n          onKeyUp={handleSearchKeyUp}\r\n          autoFocus={true}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button variant='contained' onClick={handleSearch} disabled={!isLogined}>\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Typography, Box, Container, Divider } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    marginTop: theme.spacing(15),\n    padding: theme.spacing(2),\n    maxWidth: '90%',\n    backgroundColor: 'white',\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '70%',\n    },\n  },\n  title: {\n    padding: theme.spacing(1),\n  },\n  firstPara: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(1),\n  },\n  footNote: {\n    marginTop: theme.spacing(1),\n  }\n}));\n\nexport default function HelpModal(props) {\n  const classes = useStyles();\n  const BodyPara = (props) => {\n    return (\n      <Typography color='textSecondary' className={classes.body + ' ' + props.className} align={props.align}>\n        {props.children}\n      </Typography>\n    );\n  };\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Container className={classes.root}>\n        <Box>\n          <Typography\n            color='textPrimary'\n            variant='h4'\n            className={classes.title}\n          >\n            Google Photos Search Enhancer\n          </Typography>\n          <Divider />\n          <Box>\n            <Typography color='textSecondary' className={classes.firstPara}>\n              This app will help you to search through the descriptions and\n              filenames in your Google Photos Library. Click the 'LOGIN' button to start!\n            </Typography>\n            <ul>\n              <li>\n                <BodyPara>\n                  <strong>Data:</strong> All data in this application are stored locally. None of\n                  them would be uploaded to any server.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Update:</strong> Please click the 'Update' button to get the latest\n                  change in your Google Photos Library.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Edit:</strong> Click the photo in the search result, then you can edit\n                  it in your Google Photos\n                </BodyPara>\n              </li>\n            </ul>\n          </Box>\n          <Divider/>\n          <BodyPara align='right' className={classes.footNote}>For further help, please send email to yangyi621#outlook.com &#40;replace # by @&#41;</BodyPara>\n        </Box>\n      </Container>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nexport default function MyDialog(props) {\n  const handleIsAgreed = (bool) => () => {\n    props.onAgreed(bool);\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={handleIsAgreed(false)}\n      aria-describedby='alert-dialog-description'\n    >\n      <DialogContent>\n        <DialogContentText id='alert-dialog-description'>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleIsAgreed(false)} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleIsAgreed(true)} color='primary' autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import AppBar from '@material-ui/core/AppBar';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport GoogleBtn from './GoogleBtn';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Box, Grid, IconButton, Snackbar } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { clearData } from './IndexedDBController';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { getTimeStamp, setTimeStamp, checkNotFirstVisit } from './IndexedDBController';\r\nimport {\r\n  requestAllMediaItems,\r\n  controller,\r\n} from './GapiConnection';\r\nimport { useAccess } from './Context/AccessContext';\r\nimport { useFeedbackUpdate } from './Context/FeedbackContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HelpModal from './HelpModal';\r\nimport MyDialog from './MyDialog';\r\n\r\nexport default function MyAppBar() {\r\n  // Styles\r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    title: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: '1rem',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '1.2rem',\r\n      },\r\n    },\r\n    offset: theme.mixins.toolbar,\r\n  }));\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let justifyStyle;\r\n  useMediaQuery(theme.breakpoints.up('md'))\r\n    ? (justifyStyle = 'flex-end')\r\n    : (justifyStyle = 'center');\r\n\r\n  // Context\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updateFeedback = useFeedbackUpdate();\r\n\r\n  // States\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [lastUpdateTime, setLastUpdateTime] = useState('');\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\r\n  const [snackPack, setSnackPack] = useState([]);\r\n  const [messageInfo, setMessageInfo] = useState('');\r\n  const [severity, setSeverity] = useState(undefined);\r\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\r\n  const [openUpdateAlertDialog, setOpenUpdateAlertDialog] = useState(false);\r\n  const [isUpdateRequestAgreed, setIsUpdateRequestAgreed] = useState(undefined);\r\n\r\n  // Update SnackPack \r\n  React.useEffect(() => {\r\n    if (snackPack.length) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo(snackPack[0].message);\r\n      setSeverity(snackPack[0].severity);\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setIsSnackbarOpen(true);\r\n    } else if (snackPack.length && messageInfo && isSnackbarOpen) {\r\n      // Close an active snack when a new one is added\r\n      setIsSnackbarOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, isSnackbarOpen]);\r\n\r\n  // Update local data when update request is confrimed\r\n  React.useEffect(() => {\r\n    if (isUpdateRequestAgreed === true) {\r\n      updateFeedback.handleBackdrop(true);\r\n      updateFeedback.handleTextMessage(\r\n        'Updating local data... Please wait for a while'\r\n      );\r\n      \r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          console.log('Update completed!');\r\n          addSnackPack('success', 'Update completed!');\r\n          // Update the LastUpdateView\r\n          setLastUpdateTime(getTimeStamp());\r\n        })\r\n        .finally(() => {\r\n          updateFeedback.handleBackdrop(false);\r\n          updateFeedback.handleTextMessage('');\r\n        });\r\n      setIsUpdateRequestAgreed(undefined);\r\n    }\r\n  }, [isUpdateRequestAgreed, accessToken, updateFeedback]);\r\n\r\n  React.useEffect(() => {\r\n    // If it's the first time\r\n    if (!checkNotFirstVisit()) {\r\n      setIsHelpModalOpen(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClear = () => {\r\n    clearData().then(() => addSnackPack('success', 'Clear completed!'));\r\n    setTimeStamp('');\r\n    setLastUpdateTime(getTimeStamp());\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setIsSnackbarOpen(false);\r\n  };\r\n\r\n  const addSnackPack = (sever, text) => {\r\n    const severity = sever || 'info';\r\n    const message = text || \"Don't panic\";\r\n    setSnackPack((prev) => [\r\n      ...prev,\r\n      { severity, message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const addZero = (input) => {\r\n      if (input.length < 2) input = '0' + input;\r\n    };\r\n    let month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hours = '' + d.getHours(),\r\n      minutes = '' + d.getMinutes(),\r\n      seconds = '' + d.getSeconds();\r\n\r\n    addZero(month);\r\n    addZero(day);\r\n    addZero(hours);\r\n    addZero(minutes);\r\n    addZero(seconds);\r\n\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const handleHelpModalClose = () => {\r\n    setIsHelpModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position='sticky'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems='center' justify='flex-start' spacing={1}>\r\n            <Grid\r\n              container\r\n              item\r\n              justify='flex-start'\r\n              alignItems='center'\r\n              lg={4}\r\n              md={5}\r\n              xs={12}\r\n            >\r\n              <IconButton\r\n                color='inherit'\r\n                aria-label='open drawer'\r\n                onClick={() => setIsDrawerOpen(true)}\r\n                edge='start'\r\n                className={clsx(\r\n                  classes.menuButton,\r\n                  isDrawerOpen && classes.hide\r\n                )}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' className={classes.title}>\r\n                Google Photos Search Enhancer\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify='flex-start'\r\n              lg={5}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <SearchBar />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify={justifyStyle}\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n            >\r\n              <GoogleBtn\r\n                onSetLastUpdateTime={() => setLastUpdateTime(getTimeStamp())}\r\n                lastUpdateTime={lastUpdateTime}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant='persistent'\r\n        anchor='left'\r\n        open={isDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={() => setIsDrawerOpen(false)}>\r\n            {(theme.direction === 'ltr') ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => setOpenUpdateAlertDialog(true)} disabled={!isLogined}>\r\n            <ListItemText primary='Update data' />\r\n          </ListItem>\r\n          <ListItem button onClick={handleClear} disabled={!lastUpdateTime}>\r\n            <ListItemText primary='Clear data' />\r\n          </ListItem>\r\n          {/* <ListItem button onClick={controller.abort}>\r\n            <ListItemText primary='Stop' />\r\n          </ListItem> */}\r\n          <ListItem\r\n            button\r\n            onClick={ () => setIsHelpModalOpen(true) }\r\n            disabled={isHelpModalOpen}\r\n          >\r\n            <ListItemText primary='Help' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <Typography\r\n          variant='subtitle1'\r\n          display='block'\r\n          gutterBottom\r\n          className={classes.content}\r\n          color='textSecondary'\r\n        >\r\n          <Box>Last Update:</Box>\r\n          {lastUpdateTime ? formatDate(lastUpdateTime) : 'No data'}\r\n        </Typography>\r\n      </Drawer>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        open={isSnackbarOpen}\r\n        onClose={handleSnackbarClose}\r\n        autoHideDuration={3000}\r\n      >\r\n        <MuiAlert\r\n          onClose={handleSnackbarClose}\r\n          severity={severity}\r\n          elevation={6}\r\n          variant='filled'\r\n        >\r\n          {messageInfo}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <HelpModal open={isHelpModalOpen} onClose={handleHelpModalClose} />\r\n      <MyDialog\r\n        open={openUpdateAlertDialog}\r\n        onClose={() => setOpenUpdateAlertDialog(false)}\r\n        onAgreed={(isAgreed) => setIsUpdateRequestAgreed(isAgreed)}\r\n      >\r\n        <Typography color='textPrimary'>\r\n        Depending on the quantity of items in your Google Photos Library, the updating time could be up to a few minutes. Are you sure to update?\r\n        </Typography>\r\n      </MyDialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Masonry from 'react-masonry-css';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { useUrl } from './Context/UrlsContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n    marginTop: '10px',\r\n    marginLeft: '10px',\r\n  },\r\n  gridListTile: {\r\n    maxWidth: 480,\r\n    maxHeight: 360,\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n    '&:hover': {\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n  masonryGrid: {\r\n    display: 'flex',\r\n    marginLeft: '-30px' /* gutter size offset */,\r\n    width: '100%',\r\n  },\r\n  masonryGridColumn: {\r\n    paddingLeft: '20px' /* gutter size */,\r\n    backgroundClip: 'padding-box',\r\n    /* change div to reference your elements you put in <Masonry> */\r\n    '& > div': {\r\n      marginBottom: '30px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Photos(props) {\r\n  // Style\r\n  const classes = useStyles();\r\n  const breakpointColumnsObj = {\r\n    default: 6,\r\n    1920: 4,\r\n    1280: 3,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  // States\r\n  const [loadingPhotos, setLoadingPhotos] = useState(true);\r\n  const photoUrls = useUrl().photoUrls;\r\n\r\n\r\n  // TODO: because async requests after searching for displaying, we have to wait\r\n  // should fix the timeout logic later\r\n  useEffect(() => {\r\n    // setLoadingPhotos(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setLoadingPhotos(false);\r\n    }, 1200);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handleClick = (url) => {\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loadingPhotos ? (\r\n        <Grid container spacing={1} >\r\n          {props.ids.map((id) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={id}>\r\n              <Skeleton variant='rect' height={300} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className={classes.masonryGrid}\r\n          columnClassName={classes.masonryGridColumn}\r\n        >\r\n          {props.ids.map((id, index) => (\r\n            <img\r\n              key={id}\r\n              src={`${photoUrls[index].baseUrl}=w640-h640`}\r\n              alt='Google Photos'\r\n              className={classes.image}\r\n              onClick={() => handleClick(photoUrls[index].productUrl)}\r\n            />\r\n          ))}\r\n        </Masonry>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFeedback } from './Context/FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  leftPadding: {\r\n    paddingLeft: '15px',\r\n  }\r\n}));\r\n\r\nexport default function SimpleBackdrop() {\r\n  const classes = useStyles();\r\n  const isBackdropOpened = useFeedback().isBackdropOpened;\r\n  const textMessage = useFeedback().textMessage;\r\n\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={isBackdropOpened}>\r\n      <CircularProgress color='inherit' />\r\n      <Typography className={classes.leftPadding}>{textMessage}</Typography>\r\n    </Backdrop>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icons8-search-500.ff17960a.png\";","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFeedback, useFeedbackUpdate } from './Context/FeedbackContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: '15px',\r\n  },\r\n}));\r\n\r\nexport default function NoMatchedSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  const isNoMatch = useFeedback().isNoMatch;\r\n  const updateIsNoMatch = useFeedbackUpdate().handleIsNoMatch;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      updateIsNoMatch(false);\r\n      return;\r\n    }\r\n    updateIsNoMatch(false);\r\n  };\r\n\r\n  function Alert(props) {\r\n    return (\r\n      <MuiAlert elevation={6} variant=\"filled\" onClick={handleClose} {...props}>\r\n        Not Found\r\n      </MuiAlert>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center',\r\n        }}\r\n        open={isNoMatch}\r\n        autoHideDuration={5000}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n      >\r\n        <Alert severity=\"warning\"></Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport MyAppBar from './MyAppBar';\nimport Photos from './Photos';\nimport SimpleBackdrop from './Backdrop';\nimport { Box, LinearProgress } from '@material-ui/core/';\nimport { useFeedback } from './Context/FeedbackContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUrl } from './Context/UrlsContext';\nimport icon from '../images/icons8-search-500.png';\nimport NoMatchedSnackbar from './NoMatchedSnackbar';\n\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    minHeight: '94vh',\n    // backgroundColor: '#C2E3EB',\n    // backgroundImage: 'url(./images/flock-of-birds-5403298_1280.png)',\n    // backgroundSize: '600px',\n    // backgroundRepeat: 'no-repeat',\n    // backgroundPosition: 'bottom 10px right 30px',\n  },\n  linearProgress: {\n    // width: '90%',\n    // height: '6px',\n    // position: 'fixed',\n    // bottom: '65px',\n    // marginLeft: 'auto',\n    // marginRight: 'auto',\n    // left: 0,\n    // right: 0,\n  },\n  centerText: {\n    color: '#2d72bc',\n    textDecoration: 'none',\n    fontWeight: '800',\n    fontFamily: 'Nunito, Helvetica, Arial, sans-serif',\n    fontSize: '2em',\n  },\n  centerLayout: {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  image: {\n    maxWidth: '500px',\n    maxHeight: '500px',\n    width: '40%',\n    [theme.breakpoints.up('md')]: {\n      width: '20%',\n    },\n  },\n}));\n\nconst CenterBackground = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centerText + ' ' + classes.centerLayout}>\n      <img src={icon} alt='search-icon' className={classes.image} />\n    </div>\n  );\n};\n\nexport default function Main() {\n  const classes = useStyles();\n\n  const isSearching = useFeedback().isSearching;\n  const ids = useUrl().searchedIds;\n\n  return (\n    <Box className={classes.main}>\n      <MyAppBar />\n      {(ids && ids.length) ? <Photos ids={ids} /> : <CenterBackground />}\n      <NoMatchedSnackbar />\n      <SimpleBackdrop />\n      {isSearching ? (\n        <LinearProgress className={classes.linearProgress} />\n      ) : null}\n    </Box>\n  );\n}\n","import AccessProvider from './Context/AccessContext';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FeedbackProvider from './Context/FeedbackContext';\r\nimport Footer from './Footer';\r\nimport UrlsProvider from './Context/UrlsContext';\r\nimport React from 'react';\r\nimport Main from './Main';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <AccessProvider>\r\n        <UrlsProvider>\r\n          <FeedbackProvider>\r\n            <CssBaseline />\r\n            <Main />\r\n            <Footer />\r\n          </FeedbackProvider>\r\n        </UrlsProvider>\r\n      </AccessProvider>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}