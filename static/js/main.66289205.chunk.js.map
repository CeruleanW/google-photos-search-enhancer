{"version":3,"sources":["images/icons8-search-500.png","components/AccessContext.js","components/FeedbackContext.js","components/Footer.jsx","components/UrlsContext.js","components/IndexedDBController.js","components/GapiConnection.js","components/GoogleBtn.jsx","components/SearchBar.jsx","components/HelpModal.jsx","components/MyDialog.jsx","components/MyAppBar.jsx","components/Photos.jsx","components/Backdrop.jsx","components/Main.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AccessContext","React","createContext","AccessUpdateContext","useAccess","useContext","useAccessUpdate","AccessProvider","children","useState","accessToken","setAccessToken","isLogined","setIsLogined","Provider","value","handleAccessToken","token","handleIsLogined","logined","FeedbackContext","FeedbackUpdateContext","useFeedback","useFeedbackUpdate","FeedbackProvider","isBackdropOpened","setisBackdropOpened","textMessage","setTextMessage","isSearching","setIsSearching","handleBackdrop","handleTextMessage","text","handleIsSearching","isSearch","useStyles","makeStyles","footerLayout","left","bottom","position","footerLink","color","Footer","classes","bottomThreshold","normalStyles","backgroundColor","padding","font","stickyStyles","Container","Typography","align","className","href","PhotoUrlContext","PhotoUrlUpdateContext","useUrl","useUrlUpdate","UrlsProvider","photoUrls","setPhotoUrls","searchedIds","setSearchedIds","handlePhotoUrls","handleSearchedIds","ids","dbPromise","setTimeStamp","localStorage","setItem","Date","getTimeStamp","getItem","storeMediaItems","mediaItems","a","db","tx","transaction","forEach","Promise","resolve","reject","store","put","catch","error","console","log","clear","keyword","openCursor","cursor","result","des","description","fileName","filename","includes","push","key","continue","openDB","upgrade","createObjectStore","keyPath","autoIncrement","signal","AbortController","createBaseInit","myHeaders","Object","assign","Authorization","headers","mode","createInit","pageToken","httpMethod","filters","includeArchivedMedia","pageSize","init","body","JSON","stringify","method","createRequest","apiURL","queryStrings","url","objectToQueryString","createRequestForSingleItem","obj","keys","map","join","requestAllMediaItems","requestAPageOfMediaItems","onePageData","nextToken","nextPageToken","filterResponseData","request","access_token","options","fetch","then","response","json","urls","id","requests","fetches","fulfilled","all","fulfilleds","baseUrl","productUrl","responseJson","mediaItem","oauth2","clientID","credentials","client_id","projectId","authUri","tokenUri","scopes","GoogleBtn","props","updateAccessToken","updateBackdrop","updateTextMessage","updateIsLogined","handleRequest","window","gapi","auth2","getAuthInstance","requestNewMediaItems","onLastUpdateTime","finally","Fragment","clientId","onLogoutSuccess","buttonText","onFailure","alert","render","renderProps","Button","variant","onClick","disabled","cookiePolicy","onSuccess","responseType","scope","isSignedIn","theme","search","borderRadius","shape","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","marginBottom","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","updatePhotoUrls","updateIsSearching","updateSearchedIds","setKeyword","handleSearch","length","requestForSingleItem","rejected","Grid","item","xs","InputBase","placeholder","root","input","inputProps","onChange","event","target","onKeyUp","keyCode","preventDefault","autoFocus","margin","marginTop","maxWidth","title","firstPara","footNote","HelpModal","BodyPara","Modal","open","onClose","Box","Divider","MyDialog","handleIsAgreed","bool","onAgreed","Dialog","aria-describedby","DialogContent","DialogContentText","DialogActions","MyAppBar","justifyStyle","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","down","fontSize","offset","useTheme","useMediaQuery","updateFeedback","isDrawerOpen","setIsDrawerOpen","lastUpdateTime","setLastUpdateTime","isSnackbarOpen","setIsSnackbarOpen","snackPack","setSnackPack","messageInfo","setMessageInfo","undefined","severity","setSeverity","isHelpModalOpen","setIsHelpModalOpen","openUpdateAlertDialog","setOpenUpdateAlertDialog","isUpdateAgreed","setIsUpdateAgreed","useEffect","message","prev","slice","addSnackPack","noFirstVisit","handleSnackbarClose","sever","getTime","CssBaseline","AppBar","clsx","Toolbar","container","justify","lg","md","IconButton","aria-label","edge","Drawer","anchor","paper","direction","List","ListItem","button","ListItemText","primary","clearData","gutterBottom","date","d","addZero","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDate","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","isAgreed","flexWrap","overflow","gridListTile","maxHeight","image","opacity","masonryGrid","masonryGridColumn","backgroundClip","Photos","loadingPhotos","setLoadingPhotos","timer","setTimeout","clearTimeout","sm","xl","Skeleton","breakpointCols","default","1920","1280","960","600","columnClassName","index","src","alt","backdrop","zIndex","leftPadding","SimpleBackdrop","Backdrop","CircularProgress","main","minHeight","linearProgress","centerText","textDecoration","fontWeight","fontFamily","centerLayout","top","transform","CenterBackground","icon","Main","LinearProgress","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66289205.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons8-search-500.b831ad50.png\";","import React, { useState, useContext } from 'react';\r\n\r\nconst AccessContext = React.createContext();\r\nconst AccessUpdateContext = React.createContext();\r\n\r\nexport function useAccess() {\r\n  return useContext(AccessContext);\r\n}\r\n\r\nexport function useAccessUpdate() {\r\n  return useContext(AccessUpdateContext);\r\n}\r\n\r\nexport default function AccessProvider( {children} ) {\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [isLogined, setIsLogined] = useState(false);\r\n\r\n  function handleAccessToken(token) {\r\n    setAccessToken(token);\r\n  }\r\n\r\n  function handleIsLogined(logined) {\r\n    setIsLogined(logined);\r\n  }\r\n\r\n  return (\r\n    <AccessContext.Provider value={{accessToken, isLogined}}>\r\n      <AccessUpdateContext.Provider value={{handleAccessToken, handleIsLogined}}>\r\n      {children}\r\n      </AccessUpdateContext.Provider>\r\n    </AccessContext.Provider>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst FeedbackContext = React.createContext();\r\nconst FeedbackUpdateContext = React.createContext();\r\n\r\nexport function useFeedback() {\r\n  return useContext(FeedbackContext);\r\n}\r\n\r\nexport function useFeedbackUpdate() {\r\n  return useContext(FeedbackUpdateContext);\r\n}\r\n\r\nexport default function FeedbackProvider( {children} ) {\r\n  const [isBackdropOpened, setisBackdropOpened] = useState(false);\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  function handleBackdrop(isBackdropOpened) {\r\n    setisBackdropOpened(isBackdropOpened);\r\n  }\r\n\r\n  function handleTextMessage(text) {\r\n    setTextMessage(text);\r\n  }\r\n\r\n  function handleIsSearching(isSearch) {\r\n    setIsSearching(isSearch);\r\n  }\r\n\r\n  return (\r\n    <FeedbackContext.Provider value={{isBackdropOpened, textMessage, isSearching}}>\r\n      <FeedbackUpdateContext.Provider value={{handleBackdrop, handleTextMessage, handleIsSearching}}>\r\n      {children}\r\n      </FeedbackUpdateContext.Provider>\r\n    </FeedbackContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\n// Library Link: https://www.npmjs.com/package/react-sticky-footer\r\nimport StickyFooter from 'react-sticky-footer';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  footerLayout: {\r\n    left: 0,\r\n    bottom: 0,\r\n    position: 'absolute'\r\n  },\r\n  footerLink: {\r\n    '&:visited': {\r\n      color: 'blueviolet'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Footer() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n    <StickyFooter\r\n    bottomThreshold={50}\r\n      normalStyles={{\r\n        backgroundColor: '#1b2024',\r\n        padding: '1rem',\r\n        color: 'rgb(192 192 192)',\r\n        font: \"300 0.9rem 'Lora', serif\",\r\n      }}\r\n      stickyStyles={{\r\n        backgroundColor: 'rgba(255,255,255,.8)',\r\n        padding: '1rem',\r\n        font: \"300 1rem 'Lora', serif\",\r\n\t\t\t}}\r\n    >\r\n      <Container>\r\n        <Typography align='center' >\r\n          {' '}\r\n          Copyright &copy; 2020 Developed with ❤️ by\r\n          <a className={classes.footerLink}\r\n            href='https://github.com/CeruleanW'\r\n          >\r\n            {' '}\r\n            Yi Yang\r\n          </a>\r\n        </Typography>\r\n      </Container>\r\n    </StickyFooter>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\n\r\nconst PhotoUrlContext = React.createContext();\r\nconst PhotoUrlUpdateContext = React.createContext();\r\n\r\nexport function useUrl() {\r\n  return useContext(PhotoUrlContext);\r\n}\r\n\r\nexport function useUrlUpdate() {\r\n  return useContext(PhotoUrlUpdateContext);\r\n}\r\n\r\nexport default function UrlsProvider( {children} ) {\r\n  const [photoUrls, setPhotoUrls] = useState([]);\r\n  const [searchedIds, setSearchedIds] = useState([]);\r\n\r\n  function handleSearchedIds(ids) {\r\n    setSearchedIds(ids);\r\n  }\r\n\r\n  function handlePhotoUrls(photoUrls) {\r\n    setPhotoUrls(photoUrls);\r\n  }\r\n\r\n  return (\r\n    <PhotoUrlContext.Provider value={{photoUrls, searchedIds}}>\r\n      <PhotoUrlUpdateContext.Provider value={{handlePhotoUrls, handleSearchedIds}}>\r\n      {children}\r\n      </PhotoUrlUpdateContext.Provider>\r\n    </PhotoUrlContext.Provider>\r\n  )\r\n}\r\n","import { openDB } from 'idb';\r\n\r\nlet dbPromise;\r\ncreateDatabase();\r\n\r\nexport function checkNotFirstVisit() {\r\n  if (!localStorage.noFirstVisit) {\r\n    console.log('first time');\r\n    localStorage.noFirstVisit = '1';\r\n    return false;\r\n  }\r\n  return localStorage.noFirstVisit;\r\n}\r\n\r\nexport function setTimeStamp(value = true) {\r\n  if (value) {\r\n    localStorage.setItem('updateTime', new Date());\r\n  } else {\r\n    localStorage.setItem('updateTime', '');\r\n  }\r\n}\r\n// return a date object or a empty string\r\nexport function getTimeStamp() {\r\n  return localStorage.getItem('updateTime');\r\n}\r\n\r\n// Create a database with a 'localMediaItems' object store\r\nexport function createDatabase() {\r\n  dbPromise = openDB('db', 1, {\r\n    upgrade(db) {\r\n      db.createObjectStore('localMediaItems', {\r\n        keyPath: 'id',\r\n        autoIncrement: true,\r\n      });\r\n    },\r\n  });\r\n  setTimeStamp();\r\n\r\n  return dbPromise;\r\n}\r\n\r\n// store an array\r\nexport async function storeMediaItems(mediaItems) {\r\n  const db = await dbPromise;\r\n  const tx = db.transaction('localMediaItems', 'readwrite');\r\n  mediaItems.forEach((value) => {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(tx.store.put(value));\r\n    }).catch((error) => {\r\n      console.log('Error: failed to store data in IndexedDB' + error);\r\n    });\r\n  });\r\n}\r\n\r\nexport async function clearData() {\r\n  const db = await dbPromise;\r\n  return db.clear('localMediaItems');\r\n}\r\n\r\n// search a keyword and return an array of matched Ids(keys)\r\nexport async function search(keyword) {\r\n  console.log('Keyword:' + keyword);\r\n\r\n  // request data from IndexedDB\r\n  const db = await dbPromise;\r\n  let store = db.transaction('localMediaItems').store;\r\n  let cursor = await store.openCursor();\r\n  let result = [];\r\n\r\n  // loop through each media items\r\n  while (cursor) {\r\n    let des = cursor.value.description;\r\n    let fileName = cursor.value.filename;\r\n    if (fileName && fileName.includes(keyword)) {\r\n      result.push(cursor.key);\r\n    } else if (des && des.includes(keyword)) {\r\n      result.push(cursor.key);\r\n    }\r\n    cursor = await cursor.continue();\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default function IndexedDB() {}\r\n","/* global gapi */\r\nimport {\r\n  storeMediaItems,\r\n  setTimeStamp,\r\n  getTimeStamp,\r\n} from './IndexedDBController';\r\n\r\nexport const controller = new AbortController();\r\nconst signal = controller.signal;\r\n\r\nconst createBaseInit = (accessToken) => {\r\n  let myHeaders = {};\r\n  Object.assign(myHeaders, { 'Content-Type': 'application/json' });\r\n  Object.assign(myHeaders, { Authorization: `Bearer ${accessToken}` });\r\n\r\n  const baseInit = {\r\n    headers: myHeaders,\r\n    mode: 'no-cors',\r\n    signal,\r\n  };\r\n\r\n  return baseInit;\r\n};\r\n\r\n// return an init object for Fetch\r\nconst createInit = (\r\n  accessToken,\r\n  pageToken,\r\n  httpMethod = 'POST',\r\n  filters = { includeArchivedMedia: true },\r\n  pageSize = 100\r\n) => {\r\n  let init = createBaseInit(accessToken);\r\n\r\n  // create body\r\n  let body = {\r\n    filters,\r\n    pageSize,\r\n  };\r\n\r\n  if (pageToken) {\r\n    Object.assign(body, { pageToken: pageToken });\r\n  }\r\n\r\n  body = JSON.stringify(body);\r\n\r\n  Object.assign(init, { method: httpMethod, mode: 'cors', body });\r\n\r\n  return init;\r\n};\r\n\r\nconst createRequest = (\r\n  apiURL = 'https://photoslibrary.googleapis.com/v1/mediaItems',\r\n  queryStrings\r\n) => {\r\n  let url = apiURL;\r\n  if (queryStrings) {\r\n    url += '?' + objectToQueryString(queryStrings);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst createRequestForSingleItem = (url, accessToken) => {\r\n  return `${url}?access_token=${accessToken}`;\r\n};\r\n\r\nconst objectToQueryString = (obj) => {\r\n  return Object.keys(obj)\r\n    .map((key) => key + '=' + obj[key])\r\n    .join('&');\r\n};\r\n\r\n// request for all media items and store the result in the IndexedDB\r\n// return the setted time stamp\r\n// Default: include archived items\r\nexport async function requestAllMediaItems(\r\n  accessToken,\r\n  url = 'https://photoslibrary.googleapis.com/v1/mediaItems:search',\r\n  httpMethod = 'POST'\r\n) {\r\n  let nextToken;\r\n  // fetch a page of data from Google API\r\n  let onePageData = await requestAPageOfMediaItems(\r\n    accessToken,\r\n    false,\r\n    url,\r\n    httpMethod\r\n  );\r\n  nextToken = onePageData.nextPageToken;\r\n\r\n  do {\r\n    const storedData = filterResponseData(onePageData);\r\n    storeMediaItems(storedData);\r\n    // use the nextPageToken to get the data in the next page\r\n    nextToken = onePageData.nextPageToken;\r\n    onePageData = await requestAPageOfMediaItems(\r\n      accessToken,\r\n      nextToken,\r\n      url,\r\n      httpMethod\r\n    );\r\n  } while (nextToken);\r\n\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise wrapping the response JSON\r\nasync function requestAPageOfMediaItems(\r\n  accessToken,\r\n  pageToken = '',\r\n  url = 'https://photoslibrary.googleapis.com/v1/mediaItems:search',\r\n  method = 'GET'\r\n) {\r\n  const queryStrings = { access_token: accessToken };\r\n  const request = createRequest(url, queryStrings);\r\n  const options = createInit(accessToken, pageToken, method);\r\n  return fetch(request, options)\r\n    .then((response) => {\r\n      const json = response.json();\r\n      console.log('Fetching: ' + json);\r\n      return json;\r\n    })\r\n    .catch((reject) => {\r\n      console.log('Error: ' + reject);\r\n    });\r\n}\r\n\r\nexport async function requestNewMediaItems(accessToken) {\r\n  // get items that not exists in IndexedDB\r\n  setTimeStamp(new Date());\r\n  return getTimeStamp();\r\n}\r\n\r\n// return a Promise with the fulfilled value is an array of object, which has 2 property: baseUrl & productUrl\r\nexport async function requestForSingleItem(ids, accessToken) {\r\n  // set a list of requests\r\n  const urls = ids.map(\r\n    (id) => `https://photoslibrary.googleapis.com/v1/mediaItems/${id}`\r\n  );\r\n  const requests = urls.map((url) =>\r\n    createRequestForSingleItem(url, accessToken)\r\n  );\r\n  const fetches = requests.map((request) =>\r\n    fetch(request).then((fulfilled) => fulfilled.json())\r\n  );\r\n\r\n  return await Promise.all(fetches).then((fulfilleds) => {\r\n    const resultUrls = fulfilleds.map((fulfilled) => {\r\n      const baseUrl = fulfilled.baseUrl;\r\n      const productUrl = fulfilled.productUrl;\r\n      return { baseUrl, productUrl };\r\n    });\r\n    return resultUrls;\r\n  });\r\n}\r\n\r\n// take a list of base urls, return a list of image blob urls\r\nexport async function requestImages(urls, accessToken) {\r\n  let data = [];\r\n  const simpleOptions = createBaseInit(accessToken);\r\n  // fetch each url and push the blob in response to data\r\n  await urls.forEach((url) => {\r\n    fetch(url, simpleOptions)\r\n      .then((response) => {\r\n        const blobResponse = response.blob();\r\n        data.push(blobResponse);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  });\r\n\r\n  const urlCreator = window.URL || window.webkitURL;\r\n  const result = data.map((blob) => urlCreator.createObjectURL(blob));\r\n\r\n  return result;\r\n}\r\n\r\nfunction filterResponseData(responseJson) {\r\n  return responseJson.mediaItems.map((mediaItem) => {\r\n    const { id, productUrl, filename, description } = mediaItem;\r\n    return { id, productUrl, filename, description };\r\n  });\r\n}\r\n","/* global gapi */\r\nimport React from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport * as credentials from './credentials.json';\r\nimport { getTimeStamp } from './IndexedDBController';\r\nimport { requestAllMediaItems, requestNewMediaItems } from './GapiConnection';\r\nimport { Button } from '@material-ui/core';\r\nimport { useAccessUpdate, useAccess } from './AccessContext';\r\nimport { useFeedbackUpdate } from './FeedbackContext';\r\n\r\nconst oauth2 = {\r\n  clientID: credentials.web.client_id,\r\n  projectId: 'search-chinese-1595873063241',\r\n  authUri: 'https://accounts.google.com/o/oauth2/auth',\r\n  tokenUri: 'https://oauth2.googleapis.com/token',\r\n  scopes: [\r\n    'https://www.googleapis.com/auth/photoslibrary',\r\n    'https://www.googleapis.com/auth/photoslibrary.readonly',\r\n  ],\r\n};\r\n\r\nexport default function GoogleBtn(props) {\r\n  // const classes = useStyles();\r\n  const updateAccessToken = useAccessUpdate().handleAccessToken;\r\n  const updateBackdrop = useFeedbackUpdate().handleBackdrop;\r\n  const updateTextMessage = useFeedbackUpdate().handleTextMessage;\r\n  const updateIsLogined = useAccessUpdate().handleIsLogined;\r\n  const isLogined = useAccess().isLogined;\r\n\r\n  // login, get the access token\r\n  const login = (response) => {\r\n    if (response.accessToken) {\r\n      updateIsLogined(true);\r\n      updateAccessToken(response.accessToken);\r\n      // start request\r\n      handleRequest(response.accessToken);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    updateIsLogined(false);\r\n    updateAccessToken('');\r\n    // clear search results\r\n  };\r\n\r\n  const handleLoginFailure = (response) => {\r\n    alert('Failed to log in');\r\n  };\r\n  const handleLogoutFailure = (response) => {\r\n    alert('Failed to log out');\r\n  };\r\n\r\n  // must run after the log-in is completed\r\n  const handleRequest = (accessToken) => {\r\n    console.log('handleRequest is called');\r\n    const GoogleAuth = window.gapi.auth2.getAuthInstance();\r\n\r\n    // If it's the first time that the user login\r\n    if (!getTimeStamp()) {\r\n      updateTextMessage('Initializing Local Data Storage. This may take long time depends the quantity of media items in your library');\r\n      updateBackdrop(true);\r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          // Update the LastUpdateView\r\n          props.onLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    } else {\r\n      //get new items since last update\r\n      requestNewMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          props.onLastUpdateTime();\r\n        })\r\n        .finally(() => {\r\n          updateBackdrop(false);\r\n          updateTextMessage('');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLogined ? (\r\n        <GoogleLogout\r\n          clientId={oauth2.clientID}\r\n          onLogoutSuccess={logout}\r\n          buttonText='Logout'\r\n          onFailure={handleLogoutFailure}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Logout\r\n            </Button>\r\n          )}\r\n          cookiePolicy={'single_host_origin'}\r\n        />\r\n      ) : (\r\n        <GoogleLogin\r\n          clientId={oauth2.clientID}\r\n          onSuccess={login}\r\n          onFailure={handleLoginFailure}\r\n          cookiePolicy='single_host_origin'\r\n          responseType='code,token'\r\n          scope={oauth2.scopes[1]}\r\n          isSignedIn={true}\r\n          render={(renderProps) => (\r\n            <Button\r\n              variant='contained'\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n            >\r\n              Login\r\n            </Button>\r\n          )}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { search } from './IndexedDBController';\r\nimport { requestForSingleItem } from './GapiConnection';\r\nimport { useAccess } from './AccessContext';\r\nimport { useUrlUpdate } from './UrlsContext';\r\nimport { useFeedbackUpdate } from './FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    // width: '100%',\r\n    // marginBottom: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      // marginLeft: theme.spacing(3),\r\n      marginBottom: theme.spacing(0),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    // width: '70%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchBar() {\r\n  const classes = useStyles();\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updatePhotoUrls = useUrlUpdate().handlePhotoUrls;\r\n  const updateIsSearching = useFeedbackUpdate().handleIsSearching;\r\n  const updateSearchedIds = useUrlUpdate().handleSearchedIds;\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  // Search the local IndexedDB by the keyword in state, pass the base urls to Photos\r\n  const handleSearch = () => {\r\n    if (!keyword) {\r\n      return false;\r\n    }\r\n\r\n    // show the progress feedback\r\n    updateIsSearching(true);\r\n    // reset search result to zero\r\n    updateSearchedIds([]);\r\n\r\n    // pass keyword to search media items from IndexedDB\r\n    // get the image URLs\r\n    search(keyword)\r\n      .then((fulfilled) => {\r\n        const ids = fulfilled;\r\n        updateSearchedIds(ids);\r\n        if (!ids.length) {\r\n          return 'No result';\r\n        }\r\n        updateIsSearching(false);\r\n\r\n        // request for the base urls and the product urls\r\n        requestForSingleItem(ids, accessToken).then((urls) => {\r\n          console.log(urls);\r\n          // send the base urls in response to App\r\n          updatePhotoUrls(urls);\r\n        });\r\n      })\r\n      .catch((rejected) => console.log('Error: ' + rejected))\r\n      .finally(() => updateIsSearching(false));\r\n  };\r\n\r\n  const handleKeywordChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  const handleSearchKeyUp = (event) => {\r\n    if (event.keyCode === 13) {\r\n      // Cancel the default action, if needed\r\n      event.preventDefault();\r\n      // Trigger the button element with a click\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.search} item xs={9}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          placeholder='Search…'\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          onChange={handleKeywordChange}\r\n          onKeyUp={handleSearchKeyUp}\r\n          autoFocus={true}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button variant='contained' onClick={handleSearch} disabled={!isLogined}>\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Typography, Box, Container, Divider } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n    marginTop: theme.spacing(15),\n    padding: theme.spacing(2),\n    maxWidth: '90%',\n    backgroundColor: 'white',\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: '70%',\n    },\n  },\n  title: {\n    padding: theme.spacing(1),\n  },\n  firstPara: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  body: {\n    padding: theme.spacing(1),\n  },\n  footNote: {\n    marginTop: theme.spacing(1),\n  }\n}));\n\nexport default function HelpModal(props) {\n  const classes = useStyles();\n  const BodyPara = (props) => {\n    return (\n      <Typography color='textSecondary' className={classes.body + ' ' + props.className} align={props.align}>\n        {props.children}\n      </Typography>\n    );\n  };\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Container className={classes.root}>\n        <Box>\n          <Typography\n            color='textPrimary'\n            variant='h4'\n            className={classes.title}\n          >\n            Google Photos Search Enhancer\n          </Typography>\n          <Divider />\n          <Box>\n            <Typography color='textSecondary' className={classes.firstPara}>\n              This app will help you search through the descriptions and\n              filenames in your Google Photos Library.\n            </Typography>\n            <ul>\n              <li>\n                <BodyPara>\n                  <strong>Data:</strong> All data in this application are stored locally. None of\n                  them would be uploaded to any server.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Update:</strong> Please click the 'Update' button to get the latest\n                  change in your Google Photos Library.\n                </BodyPara>\n              </li>\n              <li>\n                <BodyPara>\n                  <strong>Edit:</strong> Click the photo in the search result, then you can edit\n                  it in your Google Photos\n                </BodyPara>\n              </li>\n            </ul>\n          </Box>\n          <Divider/>\n          <BodyPara align='right' className={classes.footNote}>For further help, please send email to yangyi621#outlook.com &#40;replace # by @&#41;</BodyPara>\n        </Box>\n      </Container>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nexport default function MyDialog(props) {\n  const handleIsAgreed = (bool) => () => {\n    props.onAgreed(bool);\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={handleIsAgreed(false)}\n      aria-describedby='alert-dialog-description'\n    >\n      <DialogContent>\n        <DialogContentText id='alert-dialog-description'>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleIsAgreed(false)} color='primary'>\n          Cancel\n        </Button>\n        <Button onClick={handleIsAgreed(true)} color='primary' autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import AppBar from '@material-ui/core/AppBar';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport GoogleBtn from './GoogleBtn';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Box, Grid, IconButton, Snackbar } from '@material-ui/core';\r\nimport { clearData } from './IndexedDBController';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { getTimeStamp, setTimeStamp, checkNotFirstVisit } from './IndexedDBController';\r\nimport {\r\n  requestAllMediaItems,\r\n  controller,\r\n} from './GapiConnection';\r\nimport { useAccess } from './AccessContext';\r\nimport { useFeedbackUpdate } from './FeedbackContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HelpModal from './HelpModal';\r\nimport MyDialog from './MyDialog';\r\n\r\nexport default function MyAppBar() {\r\n  // Styles\r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2),\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    title: {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: '1rem',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '1.2rem',\r\n      },\r\n    },\r\n    offset: theme.mixins.toolbar,\r\n  }));\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  let justifyStyle;\r\n  useMediaQuery(theme.breakpoints.up('md'))\r\n    ? (justifyStyle = 'flex-end')\r\n    : (justifyStyle = 'center');\r\n\r\n  // Context\r\n  const accessToken = useAccess().accessToken;\r\n  const isLogined = useAccess().isLogined;\r\n  const updateFeedback = useFeedbackUpdate();\r\n\r\n  // States\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [lastUpdateTime, setLastUpdateTime] = useState('');\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\r\n  const [snackPack, setSnackPack] = useState([]);\r\n  const [messageInfo, setMessageInfo] = useState('');\r\n  const [severity, setSeverity] = useState(undefined);\r\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\r\n  const [openUpdateAlertDialog, setOpenUpdateAlertDialog] = useState(false);\r\n  const [isUpdateAgreed, setIsUpdateAgreed] = useState(undefined);\r\n\r\n  // Update SnackPack \r\n  React.useEffect(() => {\r\n    if (snackPack.length) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo(snackPack[0].message);\r\n      setSeverity(snackPack[0].severity);\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setIsSnackbarOpen(true);\r\n    } else if (snackPack.length && messageInfo && isSnackbarOpen) {\r\n      // Close an active snack when a new one is added\r\n      setIsSnackbarOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, isSnackbarOpen]);\r\n\r\n  // Update local data after it's confirmed \r\n  React.useEffect(() => {\r\n    if (isUpdateAgreed === true) {\r\n      updateFeedback.handleBackdrop(true);\r\n      updateFeedback.handleTextMessage(\r\n        'Updating local data... Please wait for a while'\r\n      );\r\n      requestAllMediaItems(accessToken)\r\n        .then((fulfilled) => {\r\n          console.log('Update completed!');\r\n          addSnackPack('success', 'Update completed!');\r\n          // Update the LastUpdateView\r\n          setLastUpdateTime(getTimeStamp());\r\n        })\r\n        .finally(() => {\r\n          updateFeedback.handleBackdrop(false);\r\n          updateFeedback.handleTextMessage('');\r\n        });\r\n      setIsUpdateAgreed(undefined);\r\n    }\r\n  }, [isUpdateAgreed, accessToken, updateFeedback]);\r\n\r\n  React.useEffect(() => {\r\n    // If it's the first time\r\n    if (!checkNotFirstVisit()) {\r\n      setIsHelpModalOpen(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClear = () => {\r\n    clearData().then(() => addSnackPack('success', 'Clear completed!'));\r\n    setTimeStamp('');\r\n    setLastUpdateTime(getTimeStamp());\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setIsSnackbarOpen(false);\r\n  };\r\n\r\n  const addSnackPack = (sever, text) => {\r\n    const severity = sever || 'info';\r\n    const message = text || \"Don't panic\";\r\n    setSnackPack((prev) => [\r\n      ...prev,\r\n      { severity, message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const addZero = (input) => {\r\n      if (input.length < 2) input = '0' + input;\r\n    };\r\n    let month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear(),\r\n      hours = '' + d.getHours(),\r\n      minutes = '' + d.getMinutes(),\r\n      seconds = '' + d.getSeconds();\r\n\r\n    addZero(month);\r\n    addZero(day);\r\n    addZero(hours);\r\n    addZero(minutes);\r\n    addZero(seconds);\r\n\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const handleHelpModalClose = () => {\r\n    setIsHelpModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position='sticky'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems='center' justify='flex-start' spacing={1}>\r\n            <Grid\r\n              container\r\n              item\r\n              justify='flex-start'\r\n              alignItems='center'\r\n              lg={4}\r\n              md={5}\r\n              xs={12}\r\n            >\r\n              <IconButton\r\n                color='inherit'\r\n                aria-label='open drawer'\r\n                onClick={() => setIsDrawerOpen(true)}\r\n                edge='start'\r\n                className={clsx(\r\n                  classes.menuButton,\r\n                  isDrawerOpen && classes.hide\r\n                )}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' className={classes.title}>\r\n                Google Photos Search Enhancer\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify='flex-start'\r\n              lg={5}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <SearchBar />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems='center'\r\n              justify={justifyStyle}\r\n              xs={12}\r\n              md={1}\r\n              lg={3}\r\n            >\r\n              <GoogleBtn\r\n                onLastUpdateTime={() => setLastUpdateTime(getTimeStamp())}\r\n                lastUpdateTime={lastUpdateTime}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant='persistent'\r\n        anchor='left'\r\n        open={isDrawerOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={() => setIsDrawerOpen(false)}>\r\n            {(theme.direction === 'ltr') ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => setOpenUpdateAlertDialog(true)} disabled={!isLogined}>\r\n            <ListItemText primary='Update data' />\r\n          </ListItem>\r\n          <ListItem button onClick={handleClear} disabled={!lastUpdateTime}>\r\n            <ListItemText primary='Clear data' />\r\n          </ListItem>\r\n          {/* <ListItem button onClick={controller.abort}>\r\n            <ListItemText primary='Stop' />\r\n          </ListItem> */}\r\n          <ListItem\r\n            button\r\n            onClick={ () => setIsHelpModalOpen(true) }\r\n            disabled={isHelpModalOpen}\r\n          >\r\n            <ListItemText primary='Help' />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <Typography\r\n          variant='subtitle1'\r\n          display='block'\r\n          gutterBottom\r\n          className={classes.content}\r\n          color='textSecondary'\r\n        >\r\n          <Box>Last Update:</Box>\r\n          {lastUpdateTime ? formatDate(lastUpdateTime) : 'No data'}\r\n        </Typography>\r\n      </Drawer>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        open={isSnackbarOpen}\r\n        onClose={handleSnackbarClose}\r\n        autoHideDuration={3000}\r\n      >\r\n        <MuiAlert\r\n          onClose={handleSnackbarClose}\r\n          severity={severity}\r\n          elevation={6}\r\n          variant='filled'\r\n        >\r\n          {messageInfo}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <HelpModal open={isHelpModalOpen} onClose={handleHelpModalClose} />\r\n      <MyDialog\r\n        open={openUpdateAlertDialog}\r\n        onClose={() => setOpenUpdateAlertDialog(false)}\r\n        onAgreed={(isAgreed) => setIsUpdateAgreed(isAgreed)}\r\n      >\r\n        <Typography color='textPrimary'>\r\n        Depending on the quantity of items in your Google Photos Library, the updating time could be up to a few minutes. Are you sure to update?\r\n        </Typography>\r\n      </MyDialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Masonry from 'react-masonry-css';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { useUrl } from './UrlsContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n    marginTop: '10px',\r\n    marginLeft: '10px',\r\n  },\r\n  gridListTile: {\r\n    maxWidth: 480,\r\n    maxHeight: 360,\r\n  },\r\n  image: {\r\n    maxWidth: '100%',\r\n    '&:hover': {\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n  masonryGrid: {\r\n    display: 'flex',\r\n    marginLeft: '-30px' /* gutter size offset */,\r\n    width: '100%',\r\n  },\r\n  masonryGridColumn: {\r\n    paddingLeft: '20px' /* gutter size */,\r\n    backgroundClip: 'padding-box',\r\n    /* change div to reference your elements you put in <Masonry> */\r\n    '& > div': {\r\n      marginBottom: '30px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Photos(props) {\r\n  // Style\r\n  const classes = useStyles();\r\n  const breakpointColumnsObj = {\r\n    default: 6,\r\n    1920: 4,\r\n    1280: 3,\r\n    960: 2,\r\n    600: 1,\r\n  };\r\n\r\n  // States\r\n  const [loadingPhotos, setLoadingPhotos] = useState(true);\r\n  const photoUrls = useUrl().photoUrls;\r\n\r\n  useEffect(() => {\r\n    setLoadingPhotos(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setLoadingPhotos(false);\r\n    }, 1200);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handleClick = (url) => {\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loadingPhotos ? (\r\n        <Grid container spacing={1} >\r\n          {props.ids.map((id) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={id}>\r\n              <Skeleton variant='rect' height={300} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className={classes.masonryGrid}\r\n          columnClassName={classes.masonryGridColumn}\r\n        >\r\n          {props.ids.map((id, index) => (\r\n            <img\r\n              key={id}\r\n              src={`${photoUrls[index].baseUrl}=w640-h640`}\r\n              alt='Google Photos'\r\n              className={classes.image}\r\n              onClick={() => handleClick(photoUrls[index].productUrl)}\r\n            />\r\n          ))}\r\n        </Masonry>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useFeedback } from './FeedbackContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  leftPadding: {\r\n    paddingLeft: '15px',\r\n  }\r\n}));\r\n\r\nexport default function SimpleBackdrop() {\r\n  const classes = useStyles();\r\n  const isBackdropOpened = useFeedback().isBackdropOpened;\r\n  const textMessage = useFeedback().textMessage;\r\n\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={isBackdropOpened}>\r\n      <CircularProgress color='inherit' />\r\n      <Typography className={classes.leftPadding}>{textMessage}</Typography>\r\n    </Backdrop>\r\n  );\r\n}\r\n","import React from 'react';\nimport MyAppBar from './MyAppBar';\nimport Photos from './Photos';\nimport SimpleBackdrop from './Backdrop';\nimport { Box, LinearProgress } from '@material-ui/core/';\nimport { useFeedback } from './FeedbackContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUrl } from './UrlsContext';\nimport icon from '../images/icons8-search-500.png';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    minHeight: '93.5vh',\n    // backgroundColor: '#C2E3EB',\n    // backgroundImage: 'url(./images/flock-of-birds-5403298_1280.png)',\n    // backgroundSize: '600px',\n    // backgroundRepeat: 'no-repeat',\n    // backgroundPosition: 'bottom 10px right 30px',\n  },\n  linearProgress: {\n    // width: '90%',\n    // height: '6px',\n    // position: 'fixed',\n    // bottom: '65px',\n    // marginLeft: 'auto',\n    // marginRight: 'auto',\n    // left: 0,\n    // right: 0,\n  },\n  centerText: {\n    color: '#2d72bc',\n    textDecoration: 'none',\n    fontWeight: '800',\n    fontFamily: 'Nunito, Helvetica, Arial, sans-serif',\n    fontSize: '2em',\n  },\n  centerLayout: {\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  image: {\n    maxWidth: '500px',\n    maxHeight: '500px',\n    width: '40%',\n    [theme.breakpoints.up('md')]: {\n      width: '20%',\n    },\n  },\n}));\n\nconst CenterBackground = (props) => {\n  const classes = useStyles();\n  const content = 'Search the description & filename of photos';\n  return (\n    <div className={classes.centerText + ' ' + classes.centerLayout}>\n      <img src={icon} alt='search-icon' className={classes.image} />\n    </div>\n  );\n};\n\nexport default function Main() {\n  const classes = useStyles();\n\n  const isSearching = useFeedback().isSearching;\n  const ids = useUrl().searchedIds;\n\n  return (\n    <Box className={classes.main}>\n      <MyAppBar />\n      {(ids && ids.length) ? <Photos ids={ids} /> : <CenterBackground />}\n      <SimpleBackdrop />\n      {isSearching ? (\n        <LinearProgress className={classes.linearProgress} />\n      ) : null}\n    </Box>\n  );\n}\n","import AccessProvider from './AccessContext';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FeedbackProvider from './FeedbackContext';\r\nimport Footer from './Footer';\r\nimport UrlsProvider from './UrlsContext';\r\nimport React from 'react';\r\nimport Main from './Main';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <AccessProvider>\r\n        <UrlsProvider>\r\n          <FeedbackProvider>\r\n            <CssBaseline />\r\n            <Main />\r\n            <Footer />\r\n          </FeedbackProvider>\r\n        </UrlsProvider>\r\n      </AccessProvider>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}